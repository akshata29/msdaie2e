{
	"name": "1_nycstagingtorawyellotaxidf",
	"properties": {
		"folder": {
			"name": "NycTaxi/1_StagingToRaw"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2009",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2009"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2010non0203",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2010Non0203"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds20100203",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi20100203"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds20110103",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi20110103"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2011Non0103",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2011Non0103"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2012non12",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2012Non12"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds201212",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi201212"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2013non05",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2013Non05"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds201305",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi201305"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds201401",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi201401"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2014non0108",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2014Non0108"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds201408",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi201408"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2015",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2015"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2016",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2016"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2017",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2017"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds201801",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi201801"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds201802to05",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi201802To05"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds201806",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi201806"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds201807081012",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi201807081012"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds20180911",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi20180911"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2019",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2019"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds202001to07and10",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi202001To07And10"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds202008091112",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi202008091112"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxistageyellowds2021and2022",
						"type": "DatasetReference"
					},
					"name": "StagingYellowTaxi2021And2022"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2009"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2010Non0203"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi20100203"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi20110103"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2011Non0103"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2012Non12"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi201212"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2013Non05"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi201305"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi201401"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2014Non0108"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi201408"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2015"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2016"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2017"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi201801"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi201802To06"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi201807081012"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi20180911"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2019"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi202001To07And10"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi202008091112"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi2021And2022"
				},
				{
					"dataset": {
						"referenceName": "1_nyctaxirawyellowds",
						"type": "DatasetReference"
					},
					"name": "PersistYellowTaxi201806"
				}
			],
			"transformations": [
				{
					"name": "DriftYellowTaxi2010Non0203"
				},
				{
					"name": "DerivedYellowTaxi2010Non0203"
				},
				{
					"name": "SelectYellowTaxi2010Non0203"
				},
				{
					"name": "DriftYellowTaxi2009"
				},
				{
					"name": "DerivedYellowTaxi2009"
				},
				{
					"name": "SelectYellowTaxi2009"
				},
				{
					"name": "DriftYellowTaxi20100203"
				},
				{
					"name": "DerivedYellowTaxi20100203"
				},
				{
					"name": "SelectYellowTaxi20100203"
				},
				{
					"name": "DriftYellowTaxi20110103"
				},
				{
					"name": "DerivedYellowTaxi20110103"
				},
				{
					"name": "SelectYellowTaxi20110103"
				},
				{
					"name": "DriftYellowTaxi2011Non0103"
				},
				{
					"name": "DerivedYellowTaxi2011Non0103"
				},
				{
					"name": "SelectYellowTaxi2011Non0103"
				},
				{
					"name": "DriftYellowTaxi2012Non12"
				},
				{
					"name": "DriftYellowTaxi201212"
				},
				{
					"name": "DerivedYellowTaxi2012Non12"
				},
				{
					"name": "DerivedYellowTaxi201212"
				},
				{
					"name": "SelectYellowTaxi2012Non12"
				},
				{
					"name": "SelectYellowTaxi201212"
				},
				{
					"name": "DriftYellowTaxi2013Non05"
				},
				{
					"name": "DriftYellowTaxi201305"
				},
				{
					"name": "DerivedYellowTaxi2013Non05"
				},
				{
					"name": "DerivedYellowTaxi201305"
				},
				{
					"name": "SelectYellowTaxi2013Non05"
				},
				{
					"name": "SelectYellowTaxi201305"
				},
				{
					"name": "DriftYellowTaxi201401"
				},
				{
					"name": "DriftYellowTaxi2014Non0108"
				},
				{
					"name": "DriftYellowTaxi201408"
				},
				{
					"name": "DriftYellowTaxi2015"
				},
				{
					"name": "DerivedYellowTaxi201401"
				},
				{
					"name": "DerivedYellowTaxi2014Non0108"
				},
				{
					"name": "DerivedYellowTaxi201408"
				},
				{
					"name": "DerivedYellowTaxi2015"
				},
				{
					"name": "SelectYellowTaxi201401"
				},
				{
					"name": "SelectYellowTaxi2014Non0108"
				},
				{
					"name": "SelectYellowTaxi201408"
				},
				{
					"name": "SelectYellowTaxi2015"
				},
				{
					"name": "DriftYellowTaxi2016"
				},
				{
					"name": "DriftYellowTaxi2017"
				},
				{
					"name": "DriftYellowTaxi201801"
				},
				{
					"name": "DriftYellowTaxi201802To06"
				},
				{
					"name": "DerivedYellowTaxi2016"
				},
				{
					"name": "DerivedYellowTaxi2017"
				},
				{
					"name": "DerivedYellowTaxi201801"
				},
				{
					"name": "DerivedYellowTaxi201802To06"
				},
				{
					"name": "SelectYellowTaxi2016"
				},
				{
					"name": "SelectYellowTaxi2017"
				},
				{
					"name": "SelectYellowTaxi201801"
				},
				{
					"name": "SelectYellowTaxi201802To06"
				},
				{
					"name": "DriftYellowTaxi201807081012"
				},
				{
					"name": "DriftYellowTaxi20180911"
				},
				{
					"name": "DriftYellowTaxi2019"
				},
				{
					"name": "DriftYellowTaxi202001To07And10"
				},
				{
					"name": "DerivedYellowTaxi201807081012"
				},
				{
					"name": "DerivedYellowTaxi20180911"
				},
				{
					"name": "DerivedYellowTaxi2019"
				},
				{
					"name": "DerivedYellowTaxi202001To07And10"
				},
				{
					"name": "SelectYellowTaxi201807081012"
				},
				{
					"name": "SelectYellowTaxi20180911"
				},
				{
					"name": "SelectYellowTaxi2019"
				},
				{
					"name": "SelectYellowTaxi202001To07And10"
				},
				{
					"name": "DriftYellowTaxi202008091112"
				},
				{
					"name": "DriftYellowTaxi2021And2022"
				},
				{
					"name": "DerivedYellowTaxi202008091112"
				},
				{
					"name": "DerivedYellowTaxi2021And2022"
				},
				{
					"name": "SelectYellowTaxi202008091112"
				},
				{
					"name": "SelectYellowTaxi2021And2022"
				},
				{
					"name": "DriftYellowTaxi201806"
				},
				{
					"name": "DerivedYellowTaxi201806"
				},
				{
					"name": "SelectYellowTaxi201806"
				}
			],
			"scriptLines": [
				"source(output(",
				"          vendor_name as string,",
				"          Trip_Pickup_DateTime as string,",
				"          Trip_Dropoff_DateTime as string,",
				"          Passenger_Count as long,",
				"          Trip_Distance as double,",
				"          Start_Lon as double,",
				"          Start_Lat as double,",
				"          Rate_Code as double,",
				"          store_and_forward as double,",
				"          End_Lon as double,",
				"          End_Lat as double,",
				"          Payment_Type as string,",
				"          Fare_Amt as double,",
				"          surcharge as double,",
				"          mta_tax as double,",
				"          Tip_Amt as double,",
				"          Tolls_Amt as double,",
				"          Total_Amt as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2009/month=*']) ~> StagingYellowTaxi2009",
				"source(output(",
				"          vendor_id as string,",
				"          pickup_datetime as string,",
				"          dropoff_datetime as string,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          pickup_longitude as double,",
				"          pickup_latitude as double,",
				"          rate_code as string,",
				"          store_and_fwd_flag as string,",
				"          dropoff_longitude as double,",
				"          dropoff_latitude as double,",
				"          payment_type as string,",
				"          fare_amount as double,",
				"          surcharge as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          total_amount as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2010/month=01','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=04','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=05','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=06','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=07','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=08','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=09','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=10','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=11','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=12']) ~> StagingYellowTaxi2010Non0203",
				"source(output(",
				"          vendor_id as string,",
				"          pickup_datetime as string,",
				"          dropoff_datetime as string,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          pickup_longitude as double,",
				"          pickup_latitude as double,",
				"          rate_code as string,",
				"          store_and_fwd_flag as string,",
				"          dropoff_longitude as double,",
				"          dropoff_latitude as double,",
				"          payment_type as string,",
				"          fare_amount as double,",
				"          surcharge as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          total_amount as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2010/month=02','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=03']) ~> StagingYellowTaxi20100203",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionRootPath: 'nyctaxi-staging/transactional-data/type=yellow/year=2011/month=03',",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2011/month=01']) ~> StagingYellowTaxi20110103",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2011/month=02','nyctaxi-staging/transactional-data/type=yellow/year=2011/month=04','nyctaxi-staging/transactional-data/type=yellow/year=2011/month=05','nyctaxi-staging/transactional-data/type=yellow/year=2011/month=06','nyctaxi-staging/transactional-data/type=yellow/year=2011/month=07','nyctaxi-staging/transactional-data/type=yellow/year=2011/month=08','nyctaxi-staging/transactional-data/type=yellow/year=2011/month=09','nyctaxi-staging/transactional-data/type=yellow/year=2011/month=1*']) ~> StagingYellowTaxi2011Non0103",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2012/month=01','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=02','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=03','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=04','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=05','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=06','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=07','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=08','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=09','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=10','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=11']) ~> StagingYellowTaxi2012Non12",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2012/month=12']) ~> StagingYellowTaxi201212",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2013/month=01','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=02','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=03','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=04','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=06','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=07','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=08','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=09','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=10','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=11','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=12']) ~> StagingYellowTaxi2013Non05",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2013/month=05']) ~> StagingYellowTaxi201305",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as integer,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2014/month=01']) ~> StagingYellowTaxi201401",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2014/month=02','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=03','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=04','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=05','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=06','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=07','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=09','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=10','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=11','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=12']) ~> StagingYellowTaxi2014Non0108",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as integer,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2014/month=08']) ~> StagingYellowTaxi201408",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2015/month=*']) ~> StagingYellowTaxi2015",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2016/month=*']) ~> StagingYellowTaxi2016",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2017/month=*']) ~> StagingYellowTaxi2017",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as double,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2018/month=01']) ~> StagingYellowTaxi201801",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2018/month=02','nyctaxi-staging/transactional-data/type=yellow/year=2018/month=03','nyctaxi-staging/transactional-data/type=yellow/year=2018/month=04','nyctaxi-staging/transactional-data/type=yellow/year=2018/month=05']) ~> StagingYellowTaxi201802To05",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as long,",
				"          trip_distance as double,",
				"          RatecodeID as long,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2018/month=06']) ~> StagingYellowTaxi201806",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as double,",
				"          trip_distance as double,",
				"          RatecodeID as double,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as integer,",
				"          airport_fee as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2018/month=07','nyctaxi-staging/transactional-data/type=yellow/year=2018/month=08','nyctaxi-staging/transactional-data/type=yellow/year=2018/month=10','nyctaxi-staging/transactional-data/type=yellow/year=2018/month=12']) ~> StagingYellowTaxi201807081012",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as double,",
				"          trip_distance as double,",
				"          RatecodeID as double,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2018/month=09','nyctaxi-staging/transactional-data/type=yellow/year=2018/month=11']) ~> StagingYellowTaxi20180911",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as double,",
				"          trip_distance as double,",
				"          RatecodeID as double,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as integer,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2019/month=*']) ~> StagingYellowTaxi2019",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as double,",
				"          trip_distance as double,",
				"          RatecodeID as double,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as integer,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2020/month=01','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=02','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=03','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=04','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=05','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=06','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=07','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=10']) ~> StagingYellowTaxi202001To07And10",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as double,",
				"          trip_distance as double,",
				"          RatecodeID as double,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2020/month=08','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=09','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=11','nyctaxi-staging/transactional-data/type=yellow/year=2020/month=12']) ~> StagingYellowTaxi202008091112",
				"source(output(",
				"          VendorID as long,",
				"          tpep_pickup_datetime as timestamp,",
				"          tpep_dropoff_datetime as timestamp,",
				"          passenger_count as double,",
				"          trip_distance as double,",
				"          RatecodeID as double,",
				"          store_and_fwd_flag as string,",
				"          PULocationID as long,",
				"          DOLocationID as long,",
				"          payment_type as long,",
				"          fare_amount as double,",
				"          extra as double,",
				"          mta_tax as double,",
				"          tip_amount as double,",
				"          tolls_amount as double,",
				"          improvement_surcharge as double,",
				"          total_amount as double,",
				"          congestion_surcharge as double,",
				"          airport_fee as double,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2022/month=*','nyctaxi-staging/transactional-data/type=yellow/year=2021/month=*']) ~> StagingYellowTaxi2021And2022",
				"StagingYellowTaxi2010Non0203 derive(pickup_location_id = toLong('0'),",
				"          dropoff_location_id = toLong('0'),",
				"          pickup_datetime = toTimestamp(pickup_datetime),",
				"          dropoff_datetime = toTimestamp(dropoff_datetime),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          rate_code = toDouble(byName('rate_code')),",
				"          ehail_fee = toInteger('0'),",
				"          improvement_surcharge = toDouble('0'),",
				"          congestion_surcharge = toDouble('0'),",
				"          trip_type = toDouble('0'),",
				"          extra = toDouble('0'),",
				"          airport_fee = toDouble('0')) ~> DriftYellowTaxi2010Non0203",
				"DriftYellowTaxi2010Non0203 derive(trip_year = toInteger(left(toString(pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(pickup_datetime), 6, 2)),",
				"          taxi_type = 'yelllow') ~> DerivedYellowTaxi2010Non0203",
				"DerivedYellowTaxi2010Non0203 select(mapColumn(",
				"          vendor_id,",
				"          pickup_datetime,",
				"          dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = rate_code,",
				"          pickup_location_id,",
				"          dropoff_location_id,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2010Non0203",
				"StagingYellowTaxi2009 derive(pickup_location_id = toLong('0'),",
				"          dropoff_location_id = toLong('0'),",
				"          pickup_datetime = toTimestamp(Trip_Pickup_DateTime),",
				"          dropoff_datetime = toTimestamp(Trip_Dropoff_DateTime),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          rate_code = toDouble(byName('rate_code')),",
				"          ehail_fee = toInteger('0'),",
				"          improvement_surcharge = toDouble('0'),",
				"          congestion_surcharge = toDouble('0'),",
				"          trip_type = toDouble('0'),",
				"          extra = toDouble('0'),",
				"          airport_fee = toDouble('0'),",
				"          store_and_forward = toString(store_and_forward)) ~> DriftYellowTaxi2009",
				"DriftYellowTaxi2009 derive(trip_year = toInteger(left(toString(pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(pickup_datetime), 6, 2)),",
				"          taxi_type = 'yelllow') ~> DerivedYellowTaxi2009",
				"DerivedYellowTaxi2009 select(mapColumn(",
				"          vendor_id = vendor_name,",
				"          pickup_datetime,",
				"          dropoff_datetime,",
				"          store_and_fwd_flag = store_and_forward,",
				"          rate_code_id = DriftYellowTaxi2009@rate_code,",
				"          pickup_location_id,",
				"          dropoff_location_id,",
				"          pickup_longitude = Start_Lon,",
				"          pickup_latitude = Start_Lat,",
				"          dropoff_longitude = End_Lon,",
				"          dropoff_latitude = End_Lat,",
				"          passenger_count = DriftYellowTaxi2009@passenger_count,",
				"          trip_distance = Trip_Distance,",
				"          fare_amount = Fare_Amt,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount = Tip_Amt,",
				"          tolls_amount = Tolls_Amt,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount = Total_Amt,",
				"          payment_type = Payment_Type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2009",
				"StagingYellowTaxi20100203 derive(pickup_location_id = toLong('0'),",
				"          dropoff_location_id = toLong('0'),",
				"          pickup_datetime = toTimestamp(pickup_datetime),",
				"          dropoff_datetime = toTimestamp(dropoff_datetime),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          rate_code = toDouble(byName('rate_code')),",
				"          ehail_fee = toInteger('0'),",
				"          improvement_surcharge = toDouble('0'),",
				"          congestion_surcharge = toDouble('0'),",
				"          trip_type = toDouble('0'),",
				"          extra = toDouble('0'),",
				"          airport_fee = toDouble('0')) ~> DriftYellowTaxi20100203",
				"DriftYellowTaxi20100203 derive(trip_year = toInteger(left(toString(pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi20100203",
				"DerivedYellowTaxi20100203 select(mapColumn(",
				"          vendor_id,",
				"          pickup_datetime,",
				"          dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = rate_code,",
				"          pickup_location_id,",
				"          dropoff_location_id,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi20100203",
				"StagingYellowTaxi20110103 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type)) ~> DriftYellowTaxi20110103",
				"DriftYellowTaxi20110103 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi20110103",
				"DerivedYellowTaxi20110103 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi20110103@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi20110103",
				"StagingYellowTaxi2011Non0103 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi2011Non0103",
				"DriftYellowTaxi2011Non0103 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi2011Non0103",
				"DerivedYellowTaxi2011Non0103 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi2011Non0103@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2011Non0103",
				"StagingYellowTaxi2012Non12 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi2012Non12",
				"StagingYellowTaxi201212 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi201212",
				"DriftYellowTaxi2012Non12 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi2012Non12",
				"DriftYellowTaxi201212 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi201212",
				"DerivedYellowTaxi2012Non12 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi2012Non12@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2012Non12",
				"DerivedYellowTaxi201212 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi201212@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi201212",
				"StagingYellowTaxi2013Non05 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi2013Non05",
				"StagingYellowTaxi201305 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi201305",
				"DriftYellowTaxi2013Non05 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi2013Non05",
				"DriftYellowTaxi201305 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi201305",
				"DerivedYellowTaxi2013Non05 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi2013Non05@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2013Non05",
				"DerivedYellowTaxi201305 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi201305@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi201305",
				"StagingYellowTaxi201401 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi201401",
				"StagingYellowTaxi2014Non0108 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi2014Non0108",
				"StagingYellowTaxi201408 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          improvement_surcharge = toDouble(improvement_surcharge),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          payment_type = toString(payment_type),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi201408",
				"StagingYellowTaxi2015 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi2015",
				"DriftYellowTaxi201401 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi201401",
				"DriftYellowTaxi2014Non0108 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi2014Non0108",
				"DriftYellowTaxi201408 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi201408",
				"DriftYellowTaxi2015 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi2015",
				"DerivedYellowTaxi201401 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi201401@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi201401",
				"DerivedYellowTaxi2014Non0108 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi2014Non0108@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2014Non0108",
				"DerivedYellowTaxi201408 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi201408@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi201408",
				"DerivedYellowTaxi2015 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi2015@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2015",
				"StagingYellowTaxi2016 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi2016",
				"StagingYellowTaxi2017 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi2017",
				"StagingYellowTaxi201801 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type)) ~> DriftYellowTaxi201801",
				"StagingYellowTaxi201802To05 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi201802To06",
				"DriftYellowTaxi2016 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi2016",
				"DriftYellowTaxi2017 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi2017",
				"DriftYellowTaxi201801 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi201801",
				"DriftYellowTaxi201802To06 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi201802To06",
				"DerivedYellowTaxi2016 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi2016@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2016",
				"DerivedYellowTaxi2017 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi2017@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2017",
				"DerivedYellowTaxi201801 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi201801@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi201801",
				"DerivedYellowTaxi201802To06 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi201802To06@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi201802To06",
				"StagingYellowTaxi201807081012 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          congestion_surcharge = toDouble(congestion_surcharge),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi201807081012",
				"StagingYellowTaxi20180911 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi20180911",
				"StagingYellowTaxi2019 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          airport_fee = toDouble(airport_fee),",
				"          payment_type = toString(payment_type)) ~> DriftYellowTaxi2019",
				"StagingYellowTaxi202001To07And10 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi202001To07And10",
				"DriftYellowTaxi201807081012 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi201807081012",
				"DriftYellowTaxi20180911 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi20180911",
				"DriftYellowTaxi2019 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi2019",
				"DriftYellowTaxi202001To07And10 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi202001To07And10",
				"DerivedYellowTaxi201807081012 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi201807081012@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi201807081012",
				"DerivedYellowTaxi20180911 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi20180911@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi20180911",
				"DerivedYellowTaxi2019 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi2019@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2019",
				"DerivedYellowTaxi202001To07And10 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi202001To07And10@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi202001To07And10",
				"StagingYellowTaxi202008091112 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type)) ~> DriftYellowTaxi202008091112",
				"StagingYellowTaxi2021And2022 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type)) ~> DriftYellowTaxi2021And2022",
				"DriftYellowTaxi202008091112 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi202008091112",
				"DriftYellowTaxi2021And2022 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi2021And2022",
				"DerivedYellowTaxi202008091112 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi202008091112@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi202008091112",
				"DerivedYellowTaxi2021And2022 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi2021And2022@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi2021And2022",
				"StagingYellowTaxi201806 derive(pickup_longitude = toDouble('0'),",
				"          pickup_latitude = toDouble('0'),",
				"          dropoff_longitude = toDouble('0'),",
				"          dropoff_latitude = toDouble('0'),",
				"          passenger_count = toDouble(byName('passenger_count')),",
				"          RateCodeID = toDouble(byName('RatecodeID')),",
				"          ehail_fee = toInteger('0'),",
				"          trip_type = toDouble('0'),",
				"          VendorID = toString(byName('VendorID')),",
				"          surcharge = toDouble('0'),",
				"          payment_type = toString(payment_type),",
				"          airport_fee = toDouble(airport_fee)) ~> DriftYellowTaxi201806",
				"DriftYellowTaxi201806 derive(trip_year = toInteger(left(toString(tpep_pickup_datetime),4)),",
				"          trip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),",
				"          taxi_type = 'yellow') ~> DerivedYellowTaxi201806",
				"DerivedYellowTaxi201806 select(mapColumn(",
				"          vendor_id = VendorID,",
				"          pickup_datetime = tpep_pickup_datetime,",
				"          dropoff_datetime = tpep_dropoff_datetime,",
				"          store_and_fwd_flag,",
				"          rate_code_id = DriftYellowTaxi201806@RateCodeID,",
				"          pickup_location_id = PULocationID,",
				"          dropoff_location_id = DOLocationID,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          surcharge,",
				"          airport_fee,",
				"          trip_year,",
				"          trip_month,",
				"          taxi_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectYellowTaxi201806",
				"SelectYellowTaxi2009 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2009",
				"SelectYellowTaxi2010Non0203 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2010Non0203",
				"SelectYellowTaxi20100203 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi20100203",
				"SelectYellowTaxi20110103 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi20110103",
				"SelectYellowTaxi2011Non0103 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2011Non0103",
				"SelectYellowTaxi2012Non12 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2012Non12",
				"SelectYellowTaxi201212 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi201212",
				"SelectYellowTaxi2013Non05 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2013Non05",
				"SelectYellowTaxi201305 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi201305",
				"SelectYellowTaxi201401 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi201401",
				"SelectYellowTaxi2014Non0108 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2014Non0108",
				"SelectYellowTaxi201408 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi201408",
				"SelectYellowTaxi2015 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2015",
				"SelectYellowTaxi2016 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2016",
				"SelectYellowTaxi2017 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2017",
				"SelectYellowTaxi201801 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi201801",
				"SelectYellowTaxi201802To06 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi201802To06",
				"SelectYellowTaxi201807081012 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi201807081012",
				"SelectYellowTaxi20180911 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi20180911",
				"SelectYellowTaxi2019 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2019",
				"SelectYellowTaxi202001To07And10 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi202001To07And10",
				"SelectYellowTaxi202008091112 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi202008091112",
				"SelectYellowTaxi2021And2022 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi2021And2022",
				"SelectYellowTaxi201806 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('key',",
				"          0,",
				"          trip_year,",
				"          trip_month",
				"     )) ~> PersistYellowTaxi201806"
			]
		}
	}
}