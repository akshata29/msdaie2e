{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "msdaieteadf"
        },
        "msdaieteir": {
            "type": "string",
            "metadata": "Integration runtime name",
            "defaultValue": "msdaieteir"
        },
        "msadbregion": {
            "type": "string",
            "metadata": "Azure databricks region url",
            "defaultValue": ""
        },
        "nycTaxiAccountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'nyctaxiadlsls'"
        },
        "nycTaxiadbToken": {
            "type": "secureString",
            "metadata": "Secure string for 'accessToken' of 'nyctaxiadb'"
        },
        "nycTaxiSourceAccountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accessToken' of 'nyctaxiadb'"
        },
        "nycTaxiStorageUrl": {
            "type": "string",
            "defaultValue": "https://msdaietesa.dfs.core.windows.net"
        },
        "nycTaxiSourceStorageUrl": {
            "type": "string",
            "defaultValue": "https://msdataaisa.dfs.core.windows.net"
        },
        "nycTaxiSourceUrl": {
            "type": "string",
            "defaultValue": "https://s3.amazonaws.com/nyc-tlc/trip+data/"
        },
		"adbClusterId": {
            "type": "string",
            "defaultValue": "1124-203826-state594"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/nyctaxiadlsls')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('nycTaxiStorageUrl')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('nycTaxiAccountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/nyctaxiadls')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('nycTaxiSourceStorageUrl')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('nycTaxiSourceAccountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/nycsourcels')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "[parameters('nycTaxiSourceUrl')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/nyctaxiadb')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "[parameters('msadbregion')]",
                    "accessToken": {
                        "type": "SecureString",
                        "value": "[parameters('nycTaxiadbToken')]"
                    },
                    "existingClusterId": "[parameters('adbClusterId')]"
                },
                "connectVia": {
                    "referenceName": "[parameters('msdaieteir')]",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/', parameters('msdaieteir'))]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/', parameters('msdaieteir'))]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve",
                        "dataFlowProperties": {
                            "computeType": "ComputeOptimized",
                            "coreCount": 16,
                            "timeToLive": 60
                        }
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/', parameters('msdaieteir'), 'gt')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve",
                        "dataFlowProperties": {
                            "computeType": "ComputeOptimized",
                            "coreCount": 16,
                            "timeToLive": 10
                        }
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/', parameters('msdaieteir'), 'yt')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve",
                        "dataFlowProperties": {
                            "computeType": "ComputeOptimized",
                            "coreCount": 16,
                            "timeToLive": 10
                        }
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/0_CopySourceToStaging')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Scan the file path on your source storage store and get the container list.",
                "activities": [
                    {
                        "name": "EnumerateContainersList",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "sourceadlsds",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.SourceFileFolder",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEachContainer",
                        "description": "Get the container list from Metadata activity and then iterates each of them to Copy activity.",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "EnumerateContainersList",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('EnumerateContainersList').output.childItems",
                                "type": "Expression"
                            },
                            "batchCount": 4,
                            "activities": [
                                {
                                    "name": "CopyOneContainer",
                                    "description": "Copy each container from source storage store to destination store.",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "BinarySource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true
                                            },
                                            "formatSettings": {
                                                "type": "BinaryReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "BinarySink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "copyBehavior": "PreserveHierarchy"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "sourceadlsds",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container": {
                                                    "value": "@pipeline().parameters.SourceFileFolder",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "destinationadlsds",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "container": {
                                                    "value": "@pipeline().parameters.DestinationFileFolder",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "SourceFileFolder": {
                        "type": "string",
                        "defaultValue": "sourcefolder"
                    },
                    "DestinationFileFolder": {
                        "type": "string",
                        "defaultValue": "destinationfolder"
                    }
                },
                "folder": {
                    "name": "0_SourceToStaging"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/sourceadlsds')]",
                "[concat(variables('factoryId'), '/datasets/destinationadlsds')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/0_GreenTaxiCopyToStaging')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "nycgreentaxilookup",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": false,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "0_nycgreentaxidatads",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "foreachdata",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "nycgreentaxilookup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('nycgreentaxilookup').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "relativeUrl",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "nycTaxiRelativeUrl",
                                        "value": {
                                            "value": "@concat('green_tripdata_', item().Year, '-', item().Month, '.csv')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Copy from Source",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "relativeUrl",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "BinarySource",
                                            "storeSettings": {
                                                "type": "HttpReadSettings",
                                                "requestMethod": "GET"
                                            }
                                        },
                                        "sink": {
                                            "type": "BinarySink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "0_nyctaxisourceds",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "0_nyctaxistagingds",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "variables": {
                    "nycTaxiRelativeUrl": {
                        "type": "String"
                    },
                    "nycTaxiType": {
                        "type": "String",
                        "defaultValue": "green"
                    }
                },
                "folder": {
                    "name": "0_SourceToStaging"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/0_nycgreentaxidatads')]",
                "[concat(variables('factoryId'), '/datasets/0_nyctaxisourceds')]",
                "[concat(variables('factoryId'), '/datasets/0_nyctaxistagingds')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/0_YellowTaxiCopyToStaging')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "nycyellowtaxilookup",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": false,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "0_nycyellowtaxidatads",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "foreachdata",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "nycyellowtaxilookup",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('nycyellowtaxilookup').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "relativeUrl",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "nycTaxiRelativeUrl",
                                        "value": {
                                            "value": "@concat('yellow_tripdata_', item().Year, '-', item().Month, '.csv')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Copy from Source",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "relativeUrl",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "BinarySource",
                                            "storeSettings": {
                                                "type": "HttpReadSettings",
                                                "requestMethod": "GET"
                                            }
                                        },
                                        "sink": {
                                            "type": "BinarySink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "0_nyctaxisourceds",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "0_nyctaxistagingds",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "variables": {
                    "nycTaxiRelativeUrl": {
                        "type": "String"
                    },
                    "nycTaxiType": {
                        "type": "String",
                        "defaultValue": "yellow"
                    }
                },
                "folder": {
                    "name": "0_SourceToStaging"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/0_nycyellowtaxidatads')]",
                "[concat(variables('factoryId'), '/datasets/0_nyctaxisourceds')]",
                "[concat(variables('factoryId'), '/datasets/0_nyctaxistagingds')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_GreenTaxiStagingToRaw')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LoadGreenTaxiFromStagingToRaw",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "Cleanup Directories",
                                "dependencyConditions": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "1_nycstagingtorawgreentaxidf",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "StagingGreenTaxiPre2015": {},
                                    "StagingGreenTaxi2015H1": {},
                                    "StagingGreenTaxi2015H22016H1": {},
                                    "StagingGreenTaxi2016H2": {},
                                    "StagingGreenTaxiPost2017": {},
                                    "PersistPre2015": {},
                                    "Persist2015H1": {},
                                    "Persist2015H22016H1": {},
                                    "Persist2016H2": {},
                                    "PersistPost2017": {}
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "[concat(parameters('msdaieteir'), 'gt')]",
                                "type": "IntegrationRuntimeReference"
                            }
                        }
                    },
                    {
                        "name": "Delete committed Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete started Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawgreentaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_committed*"
                            }
                        }
                    },
                    {
                        "name": "Delete started Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete success files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawgreentaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_started*"
                            }
                        }
                    },
                    {
                        "name": "Delete success files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "LoadGreenTaxiFromStagingToRaw",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawgreentaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_SUCCESS*"
                            }
                        }
                    },
                    {
                        "name": "Cleanup Directories",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawgreentaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "Execute 1_GreenTaxi",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Delete committed Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Shared/msdaie2e/adf/1_LoadData/1_GreenTaxi"
                        },
                        "linkedServiceName": {
                            "referenceName": "nyctaxiadb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/1_nycstagingtorawgreentaxidf')]",
                "[concat(variables('factoryId'), '/datasets/1_nycrawgreentaxi')]",
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_ReferenceStagingToRaw')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Load Reference Data to Raw",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "Cleanup Directories",
                                "dependencyConditions": [
                                    "Failed",
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "1_nycstagingtorawreferencedf",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "StagingPaymentType": {},
                                    "StagingTaxiZone": {},
                                    "StagingTripMonth": {},
                                    "StagingTripType": {},
                                    "StagingVendor": {},
                                    "StagingRateCode": {},
                                    "RawPaymentType": {},
                                    "RawRateCode": {},
                                    "RawTaxiZone": {},
                                    "RawTripMonth": {},
                                    "RawTripType": {},
                                    "RawVendor": {}
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "[concat(parameters('msdaieteir'))]",
                                "type": "IntegrationRuntimeReference"
                            }
                        }
                    },
                    {
                        "name": "Cleanup Directories",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawreference",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "Delete committed Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Load Reference Data to Raw",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawreference",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_committed*"
                            }
                        }
                    },
                    {
                        "name": "Delete started Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete committed Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawreference",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_started*"
                            }
                        }
                    },
                    {
                        "name": "Delete success files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete started Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawreference",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_SUCCESS*"
                            }
                        }
                    },
                    {
                        "name": "Execute 0_ReferenceData",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Delete success files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Shared/msdaie2e/adf/1_LoadData/0_ReferenceData"
                        },
                        "linkedServiceName": {
                            "referenceName": "nyctaxiadb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/1_nycstagingtorawreferencedf')]",
                "[concat(variables('factoryId'), '/datasets/1_nycrawreference')]",
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_GreenTaxiRawToCurated')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "2_GreenTaxiRawToCurated",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "Cleanup Directories",
                                "dependencyConditions": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "2_nycrawtocuratedgreentaxidf",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "RawGreenTaxi": {},
                                    "RawPaymentType": {},
                                    "RawRateCode": {},
                                    "RawTaxiZone": {},
                                    "RawVendor": {},
                                    "RawTripType": {},
                                    "RawTripMonth": {},
                                    "SinkToCuratedZone": {}
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "[concat(parameters('msdaieteir'), 'gt')]",
                                "type": "IntegrationRuntimeReference"
                            }
                        }
                    },
                    {
                        "name": "Cleanup Directories",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "2_nyccuratedgreentaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "Delete committed Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete success files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "2_nyccuratedgreentaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_committed*"
                            }
                        }
                    },
                    {
                        "name": "Delete started Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "2_GreenTaxiRawToCurated",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "2_nyccuratedgreentaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_started*"
                            }
                        }
                    },
                    {
                        "name": "Delete success files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete started Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "2_nyccuratedgreentaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_SUCCESS*"
                            }
                        }
                    },
                    {
                        "name": "Execute 1_GreenTaxi",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Delete committed Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Shared/msdaie2e/adf/2_TransformData/1_GreenTaxi"
                        },
                        "linkedServiceName": {
                            "referenceName": "nyctaxiadb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/2_nycrawtocuratedgreentaxidf')]",
                "[concat(variables('factoryId'), '/datasets/2_nyccuratedgreentaxi')]",
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_YellowTaxiStagingToRaw')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LoadYellowTaxiFromStagingToRaw",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "Cleanup Directories",
                                "dependencyConditions": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "1_nycstagingtorawyellowtaxidf",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "StagingYellowTaxiPre2015": {},
                                    "StagingYellowTaxi20152016H1": {},
                                    "StagingYellowTaxi2016H2": {},
                                    "StagingYellowTaxiPost2017": {},
                                    "PersistPre2015": {},
                                    "Persist2015H22016H1": {},
                                    "Persist2016H2": {},
                                    "PersistPost2017": {}
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "[concat(parameters('msdaieteir'), 'yt')]",
                                "type": "IntegrationRuntimeReference"
                            }
                        }
                    },
                    {
                        "name": "Delete committed Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete started Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawyellowtaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_committed*"
                            }
                        }
                    },
                    {
                        "name": "Delete started Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete success files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawyellowtaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_started*"
                            }
                        }
                    },
                    {
                        "name": "Delete success files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "LoadYellowTaxiFromStagingToRaw",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawyellowtaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_SUCCESS*"
                            }
                        }
                    },
                    {
                        "name": "Cleanup Directories",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "1_nycrawyellowtaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "Execute 2_YellowTaxi",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Delete committed Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Shared/msdaie2e/adf/1_LoadData/2_YellowTaxi"
                        },
                        "linkedServiceName": {
                            "referenceName": "nyctaxiadb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/1_nycstagingtorawyellowtaxidf')]",
                "[concat(variables('factoryId'), '/datasets/1_nycrawyellowtaxi')]",
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_YellowTaxiRawToCurated')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "2_YellowTaxiRawToCurated",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "Cleanup Directories",
                                "dependencyConditions": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "2_nycrawtocuratedyellowtaxidf",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "RawYellowTaxi": {},
                                    "RawPaymentType": {},
                                    "RawRateCode": {},
                                    "RawTaxiZone": {},
                                    "RawVendor": {},
                                    "RawTripType": {},
                                    "RawTripMonth": {},
                                    "SinkToCuratedZone": {}
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "[concat(parameters('msdaieteir'), 'yt')]",
                                "type": "IntegrationRuntimeReference"
                            }
                        }
                    },
                    {
                        "name": "Cleanup Directories",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "2_nyccuratedyellowtaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "Delete committed Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete success files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "2_nyccuratedyellowtaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_committed*"
                            }
                        }
                    },
                    {
                        "name": "Delete started Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "2_YellowTaxiRawToCurated",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "2_nyccuratedyellowtaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_started*"
                            }
                        }
                    },
                    {
                        "name": "Delete success files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete started Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "2_nyccuratedyellowtaxi",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_SUCCESS*"
                            }
                        }
                    },
                    {
                        "name": "Execute 2_YellowTaxi",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Delete committed Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Shared/msdaie2e/adf/2_TransformData/2_YellowTaxi"
                        },
                        "linkedServiceName": {
                            "referenceName": "nyctaxiadb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/2_nycrawtocuratedyellowtaxidf')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/', parameters('msdaieteir'))]",
                "[concat(variables('factoryId'), '/datasets/2_nyccuratedyellowtaxi')]",
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/sourceadlsds')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Connection to your source data store.",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadls",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "container": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "0_SourceToStaging"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/destinationadlsds')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Connection to your destination data store.",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "container": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "0_SourceToStaging"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/0_nycgreentaxidatads')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0_SourceToStaging"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "greentaxi_lookup.csv",
                        "folderPath": "nyctaxi-staging/reference-data",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Type",
                        "type": "String"
                    },
                    {
                        "name": "Year",
                        "type": "String"
                    },
                    {
                        "name": "Month",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/0_nyctaxistagingds')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0_SourceToStaging"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@{variables('nycTaxiRelativeUrl')}",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "nyctaxi-staging/transactional-data/type=@{variables('nycTaxiType')}/year=@{item().Year}/month=@{item().Month}/",
                            "type": "Expression"
                        },
                        "fileSystem": "nyctaxi"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/0_nycyellowtaxidatads')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0_SourceToStaging"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "yellowtaxi_lookup.csv",
                        "folderPath": "nyctaxi-staging/reference-data",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Type",
                        "type": "String"
                    },
                    {
                        "name": "Year",
                        "type": "String"
                    },
                    {
                        "name": "Month",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/0_nyctaxisourceds')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nycsourcels",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0_SourceToStaging"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "HttpServerLocation",
                        "relativeUrl": {
                            "value": "@{variables('nycTaxiRelativeUrl')}",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nycsourcels')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawtaxizone')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-raw-df/reference/taxi-zone",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "location_id",
                        "type": "UTF8"
                    },
                    {
                        "name": "borough",
                        "type": "UTF8"
                    },
                    {
                        "name": "zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "service_zone",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingratecode')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "rate_code_lookup.csv",
                        "folderPath": "nyctaxi-staging/reference-data",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "rate_code_id|description",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingtripmonth')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "trip_month_lookup.csv",
                        "folderPath": "nyctaxi-staging/reference-data",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Trip_Month",
                        "type": "String"
                    },
                    {
                        "name": "Month_Name_Short",
                        "type": "String"
                    },
                    {
                        "name": "Month_Name_Full",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawvendor')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-raw-df/reference/vendor",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "vendor_id",
                        "type": "INT32"
                    },
                    {
                        "name": "abbreviation",
                        "type": "UTF8"
                    },
                    {
                        "name": "description",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawpaymenttype')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-raw-df/reference/payment-type",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "payment_type",
                        "type": "INT32"
                    },
                    {
                        "name": "abbreviation",
                        "type": "UTF8"
                    },
                    {
                        "name": "description",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingtaxizone')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "taxi_zone_lookup.csv",
                        "folderPath": "nyctaxi-staging/reference-data",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "LocationID",
                        "type": "String"
                    },
                    {
                        "name": "Borough",
                        "type": "String"
                    },
                    {
                        "name": "Zone",
                        "type": "String"
                    },
                    {
                        "name": "service_zone",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingtriptype')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "trip_type_lookup.csv",
                        "folderPath": "nyctaxi-staging/reference-data",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "trip_type",
                        "type": "String"
                    },
                    {
                        "name": "description",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawratecode')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-raw-df/reference/rate-code",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingvendor')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "vendor_lookup.csv",
                        "folderPath": "nyctaxi-staging/reference-data",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "vendor_id",
                        "type": "String"
                    },
                    {
                        "name": "abbreviation",
                        "type": "String"
                    },
                    {
                        "name": "description",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingpaymenttype')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "payment_type_lookup.csv",
                        "folderPath": "nyctaxi-staging/reference-data",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "payment_type",
                        "type": "String"
                    },
                    {
                        "name": "abbreviation",
                        "type": "String"
                    },
                    {
                        "name": "description",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawtripmonth')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-raw-df/reference/trip-month",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "trip_month",
                        "type": "UTF8"
                    },
                    {
                        "name": "month_name_short",
                        "type": "UTF8"
                    },
                    {
                        "name": "month_name_full",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawtriptype')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-raw-df/reference/trip-type",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "trip_type",
                        "type": "INT32"
                    },
                    {
                        "name": "description",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstaginggreentaxipre2015')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "August 2013 through 2014",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "VendorID",
                        "type": "Int32"
                    },
                    {
                        "name": "lpep_pickup_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "Lpep_dropoff_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "Store_and_fwd_flag",
                        "type": "String"
                    },
                    {
                        "name": "RateCodeID",
                        "type": "Int32"
                    },
                    {
                        "name": "Pickup_longitude",
                        "type": "String"
                    },
                    {
                        "name": "Pickup_latitude",
                        "type": "String"
                    },
                    {
                        "name": "Dropoff_longitude",
                        "type": "String"
                    },
                    {
                        "name": "Dropoff_latitude",
                        "type": "String"
                    },
                    {
                        "name": "Passenger_count",
                        "type": "Int32"
                    },
                    {
                        "name": "Trip_distance",
                        "type": "Double"
                    },
                    {
                        "name": "Fare_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Extra",
                        "type": "Double"
                    },
                    {
                        "name": "MTA_tax",
                        "type": "Double"
                    },
                    {
                        "name": "Tip_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Tolls_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Ehail_fee",
                        "type": "Double"
                    },
                    {
                        "name": "Total_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Payment_type",
                        "type": "Int32"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycrawgreentaxi')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-raw-df/transactions/green-taxi",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "none"
                },
                "schema": [
                    {
                        "name": "taxi_type",
                        "type": "UTF8"
                    },
                    {
                        "name": "vendor_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "dropoff_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "UTF8"
                    },
                    {
                        "name": "rate_code_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_location_id",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_location_id",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_longitude",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "pickup_latitude",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "dropoff_longitude",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "dropoff_latitude",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "passenger_count",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "fare_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "extra",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "mta_tax",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tip_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "ehail_fee",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "total_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "payment_type",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_type",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_year",
                        "type": "UTF8"
                    },
                    {
                        "name": "trip_month",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstaginggreentaxi2015H1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "2015 first half of the year",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "VendorID",
                        "type": "Int32"
                    },
                    {
                        "name": "lpep_pickup_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "Lpep_dropoff_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "Store_and_fwd_flag",
                        "type": "String"
                    },
                    {
                        "name": "RateCodeID",
                        "type": "Int32"
                    },
                    {
                        "name": "Pickup_longitude",
                        "type": "String"
                    },
                    {
                        "name": "Pickup_latitude",
                        "type": "String"
                    },
                    {
                        "name": "Dropoff_longitude",
                        "type": "String"
                    },
                    {
                        "name": "Dropoff_latitude",
                        "type": "String"
                    },
                    {
                        "name": "Passenger_count",
                        "type": "Int32"
                    },
                    {
                        "name": "Trip_distance",
                        "type": "Double"
                    },
                    {
                        "name": "Fare_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Extra",
                        "type": "Double"
                    },
                    {
                        "name": "MTA_tax",
                        "type": "Double"
                    },
                    {
                        "name": "Tip_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Tolls_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Ehail_fee",
                        "type": "Double"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "Double"
                    },
                    {
                        "name": "Total_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Payment_type",
                        "type": "Int32"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstaginggreentaxi2015H22016H1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "2015 second half of the year and 2016 first half of the year",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "VendorID",
                        "type": "Int32"
                    },
                    {
                        "name": "lpep_pickup_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "Lpep_dropoff_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "Store_and_fwd_flag",
                        "type": "String"
                    },
                    {
                        "name": "RateCodeID",
                        "type": "Int32"
                    },
                    {
                        "name": "Pickup_longitude",
                        "type": "String"
                    },
                    {
                        "name": "Pickup_latitude",
                        "type": "String"
                    },
                    {
                        "name": "Dropoff_longitude",
                        "type": "String"
                    },
                    {
                        "name": "Dropoff_latitude",
                        "type": "String"
                    },
                    {
                        "name": "Passenger_count",
                        "type": "Int32"
                    },
                    {
                        "name": "Trip_distance",
                        "type": "Double"
                    },
                    {
                        "name": "Fare_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Extra",
                        "type": "Double"
                    },
                    {
                        "name": "MTA_tax",
                        "type": "Double"
                    },
                    {
                        "name": "Tip_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Tolls_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Ehail_fee",
                        "type": "Double"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "Double"
                    },
                    {
                        "name": "Total_amount",
                        "type": "Double"
                    },
                    {
                        "name": "Payment_type",
                        "type": "Int32"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstaginggreentaxi2016H2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Second half of 2016",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "VendorID",
                        "type": "Int32"
                    },
                    {
                        "name": "lpep_pickup_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "lpep_dropoff_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "String"
                    },
                    {
                        "name": "RatecodeID",
                        "type": "Int32"
                    },
                    {
                        "name": "PULocationID",
                        "type": "Int32"
                    },
                    {
                        "name": "DOLocationID",
                        "type": "Int32"
                    },
                    {
                        "name": "passenger_count",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "Double"
                    },
                    {
                        "name": "fare_amount",
                        "type": "Double"
                    },
                    {
                        "name": "extra",
                        "type": "Double"
                    },
                    {
                        "name": "mta_tax",
                        "type": "Double"
                    },
                    {
                        "name": "tip_amount",
                        "type": "Double"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "Double"
                    },
                    {
                        "name": "ehail_fee",
                        "type": "Double"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "Double"
                    },
                    {
                        "name": "total_amount",
                        "type": "Double"
                    },
                    {
                        "name": "payment_type",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_type",
                        "type": "Int32"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstaginggreentaxiPost2017')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "2017 and beyond",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "VendorID",
                        "type": "Int32"
                    },
                    {
                        "name": "lpep_pickup_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "lpep_dropoff_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "String"
                    },
                    {
                        "name": "RatecodeID",
                        "type": "Int32"
                    },
                    {
                        "name": "PULocationID",
                        "type": "Int32"
                    },
                    {
                        "name": "DOLocationID",
                        "type": "Int32"
                    },
                    {
                        "name": "passenger_count",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "Double"
                    },
                    {
                        "name": "fare_amount",
                        "type": "Double"
                    },
                    {
                        "name": "extra",
                        "type": "Double"
                    },
                    {
                        "name": "mta_tax",
                        "type": "Double"
                    },
                    {
                        "name": "tip_amount",
                        "type": "Double"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "Double"
                    },
                    {
                        "name": "ehail_fee",
                        "type": "Double"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "Double"
                    },
                    {
                        "name": "total_amount",
                        "type": "Double"
                    },
                    {
                        "name": "payment_type",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_type",
                        "type": "Int32"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycrawreference')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-raw-df/reference",
                        "fileSystem": "nyctaxi"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nyccuratedgreentaxi')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-curated-df/transactions/green-taxi",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "taxi_type",
                        "type": "UTF8"
                    },
                    {
                        "name": "vendor_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "dropoff_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "UTF8"
                    },
                    {
                        "name": "rate_code_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_location_id",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_location_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_longitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_latitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_longitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_latitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "passenger_count",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "fare_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "extra",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "mta_tax",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tip_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "ehail_fee",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "total_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "payment_type",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_type",
                        "type": "INT32"
                    },
                    {
                        "name": "vendor_abbreviation",
                        "type": "UTF8"
                    },
                    {
                        "name": "vendor_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "trip_type_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "month_name_short",
                        "type": "UTF8"
                    },
                    {
                        "name": "month_name_full",
                        "type": "UTF8"
                    },
                    {
                        "name": "payment_type_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "rate_code_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_borough",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_service_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_borough",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_service_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_year",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_month",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_day",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_hour",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_minute",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_second",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_year",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_month",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_day",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_hour",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_minute",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_second",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_year",
                        "type": "UTF8"
                    },
                    {
                        "name": "trip_month",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawgreentaxi')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingyellowtaxipre2015')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "2009 through 2014",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "vendor_id",
                        "type": "String"
                    },
                    {
                        "name": "pickup_datetime",
                        "type": "Timestamp"
                    },
                    {
                        "name": "dropoff_datetime",
                        "type": "Timestamp"
                    },
                    {
                        "name": "passenger_count",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "Double"
                    },
                    {
                        "name": "pickup_longitude",
                        "type": "Double"
                    },
                    {
                        "name": "pickup_latitude",
                        "type": "Double"
                    },
                    {
                        "name": "rate_code",
                        "type": "Int32"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "String"
                    },
                    {
                        "name": "dropoff_longitude",
                        "type": "Double"
                    },
                    {
                        "name": "dropoff_latitude",
                        "type": "Double"
                    },
                    {
                        "name": "payment_type",
                        "type": "String"
                    },
                    {
                        "name": "fare_amount",
                        "type": "Double"
                    },
                    {
                        "name": "surcharge",
                        "type": "String"
                    },
                    {
                        "name": "mta_tax",
                        "type": "Double"
                    },
                    {
                        "name": "tip_amount",
                        "type": "Double"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "Double"
                    },
                    {
                        "name": "total_amount",
                        "type": "Double"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingyellowtaxiPost2017')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "2017 and beyond",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "VendorID",
                        "type": "Int32"
                    },
                    {
                        "name": "tpep_pickup_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "tpep_dropoff_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "String"
                    },
                    {
                        "name": "RatecodeID",
                        "type": "Int32"
                    },
                    {
                        "name": "PULocationID",
                        "type": "Int32"
                    },
                    {
                        "name": "DOLocationID",
                        "type": "Int32"
                    },
                    {
                        "name": "passenger_count",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "Double"
                    },
                    {
                        "name": "fare_amount",
                        "type": "Double"
                    },
                    {
                        "name": "extra",
                        "type": "Double"
                    },
                    {
                        "name": "mta_tax",
                        "type": "Double"
                    },
                    {
                        "name": "tip_amount",
                        "type": "Double"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "Double"
                    },
                    {
                        "name": "ehail_fee",
                        "type": "Double"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "Double"
                    },
                    {
                        "name": "total_amount",
                        "type": "Double"
                    },
                    {
                        "name": "payment_type",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_type",
                        "type": "Int32"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingyellowtaxi20152016H1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "2015 and 2016 first half of the year",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "VendorID",
                        "type": "String"
                    },
                    {
                        "name": "tpep_pickup_datetime",
                        "type": "Timestamp"
                    },
                    {
                        "name": "tpep_dropoff_datetime",
                        "type": "Timestamp"
                    },
                    {
                        "name": "passenger_count",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "Double"
                    },
                    {
                        "name": "pickup_longitude",
                        "type": "Double"
                    },
                    {
                        "name": "pickup_latitude",
                        "type": "Double"
                    },
                    {
                        "name": "RateCodeID",
                        "type": "Int32"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "String"
                    },
                    {
                        "name": "dropoff_longitude",
                        "type": "Double"
                    },
                    {
                        "name": "dropoff_latitude",
                        "type": "Double"
                    },
                    {
                        "name": "payment_type",
                        "type": "String"
                    },
                    {
                        "name": "fare_amount",
                        "type": "Double"
                    },
                    {
                        "name": "extra",
                        "type": "String"
                    },
                    {
                        "name": "mta_tax",
                        "type": "Double"
                    },
                    {
                        "name": "tip_amount",
                        "type": "Double"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "Double"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "Double"
                    },
                    {
                        "name": "total_amount",
                        "type": "Double"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycrawyellowtaxi')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-raw-df/transactions/yellow-taxi",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "none"
                },
                "schema": [
                    {
                        "name": "taxi_type",
                        "type": "UTF8"
                    },
                    {
                        "name": "vendor_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "dropoff_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "UTF8"
                    },
                    {
                        "name": "rate_code_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_location_id",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_location_id",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_longitude",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "pickup_latitude",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "dropoff_longitude",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "dropoff_latitude",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "passenger_count",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "fare_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "extra",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "mta_tax",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tip_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "ehail_fee",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "total_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "payment_type",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_type",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_year",
                        "type": "UTF8"
                    },
                    {
                        "name": "trip_month",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingyellowtaxi2016H2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Second half of 2016",
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "VendorID",
                        "type": "Int32"
                    },
                    {
                        "name": "tpep_pickup_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "tpep_dropoff_datetime",
                        "type": "DateTime"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "String"
                    },
                    {
                        "name": "RatecodeID",
                        "type": "Int32"
                    },
                    {
                        "name": "PULocationID",
                        "type": "Int32"
                    },
                    {
                        "name": "DOLocationID",
                        "type": "Int32"
                    },
                    {
                        "name": "passenger_count",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "Double"
                    },
                    {
                        "name": "fare_amount",
                        "type": "Double"
                    },
                    {
                        "name": "extra",
                        "type": "Double"
                    },
                    {
                        "name": "mta_tax",
                        "type": "Double"
                    },
                    {
                        "name": "tip_amount",
                        "type": "Double"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "Double"
                    },
                    {
                        "name": "ehail_fee",
                        "type": "Double"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "Double"
                    },
                    {
                        "name": "total_amount",
                        "type": "Double"
                    },
                    {
                        "name": "payment_type",
                        "type": "Int32"
                    },
                    {
                        "name": "trip_type",
                        "type": "Int32"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nyccuratedyellowtaxi')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-curated-df/transactions/yellow-taxi",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "taxi_type",
                        "type": "UTF8"
                    },
                    {
                        "name": "vendor_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "dropoff_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "UTF8"
                    },
                    {
                        "name": "rate_code_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_location_id",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_location_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_longitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_latitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_longitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_latitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "passenger_count",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "fare_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "extra",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "mta_tax",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tip_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "ehail_fee",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "total_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "payment_type",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_type",
                        "type": "INT32"
                    },
                    {
                        "name": "vendor_abbreviation",
                        "type": "UTF8"
                    },
                    {
                        "name": "vendor_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "trip_type_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "month_name_short",
                        "type": "UTF8"
                    },
                    {
                        "name": "month_name_full",
                        "type": "UTF8"
                    },
                    {
                        "name": "payment_type_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "rate_code_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_borough",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_service_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_borough",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_service_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_year",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_month",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_day",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_hour",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_minute",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_second",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_year",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_month",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_day",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_hour",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_minute",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_second",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_year",
                        "type": "UTF8"
                    },
                    {
                        "name": "trip_month",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawyellowtaxi')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2_RawToCurated"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingtorawgreentaxidf')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "1_nycstaginggreentaxipre2015",
                                "type": "DatasetReference"
                            },
                            "name": "StagingGreenTaxiPre2015",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstaginggreentaxi2015H1",
                                "type": "DatasetReference"
                            },
                            "name": "StagingGreenTaxi2015H1",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstaginggreentaxi2015H22016H1",
                                "type": "DatasetReference"
                            },
                            "name": "StagingGreenTaxi2015H22016H1",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstaginggreentaxi2016H2",
                                "type": "DatasetReference"
                            },
                            "name": "StagingGreenTaxi2016H2",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstaginggreentaxiPost2017",
                                "type": "DatasetReference"
                            },
                            "name": "StagingGreenTaxiPost2017",
                            "typeProperties": {}
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "1_nycrawgreentaxi",
                                "type": "DatasetReference"
                            },
                            "name": "PersistPre2015"
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycrawgreentaxi",
                                "type": "DatasetReference"
                            },
                            "name": "Persist2015H1"
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycrawgreentaxi",
                                "type": "DatasetReference"
                            },
                            "name": "Persist2015H22016H1"
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycrawgreentaxi",
                                "type": "DatasetReference"
                            },
                            "name": "Persist2016H2"
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycrawgreentaxi",
                                "type": "DatasetReference"
                            },
                            "name": "PersistPost2017"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DerivedColumnsPre2015"
                        },
                        {
                            "name": "SelectPre2015"
                        },
                        {
                            "name": "DerivedColumns2015H1"
                        },
                        {
                            "name": "Select2015H1"
                        },
                        {
                            "name": "DerivedColumns2015H22016H1"
                        },
                        {
                            "name": "Select2015H22016H1"
                        },
                        {
                            "name": "DerivedColumns2016H2"
                        },
                        {
                            "name": "Select2016H2"
                        },
                        {
                            "name": "DerivedColumnsPost2017"
                        },
                        {
                            "name": "SelectPost2017"
                        },
                        {
                            "name": "Drift2015H1",
                            "description": "Creates an explicit mapping for each drifted column"
                        },
                        {
                            "name": "Drift2015H22016H1",
                            "description": "Creates an explicit mapping for each drifted column"
                        },
                        {
                            "name": "DriftPre2015",
                            "description": "Creates an explicit mapping for each drifted column"
                        }
                    ],
                    "script": "\n\nsource(output(\n\t\tVendorID as integer,\n\t\tlpep_pickup_datetime as timestamp,\n\t\tLpep_dropoff_datetime as timestamp,\n\t\tStore_and_fwd_flag as string,\n\t\tRateCodeID as integer,\n\t\tPickup_longitude as string,\n\t\tPickup_latitude as string,\n\t\tDropoff_longitude as string,\n\t\tDropoff_latitude as string,\n\t\tPassenger_count as integer,\n\t\tTrip_distance as double,\n\t\tFare_amount as double,\n\t\tExtra as double,\n\t\tMTA_tax as double,\n\t\tTip_amount as double,\n\t\tTolls_amount as double,\n\t\tEhail_fee as double,\n\t\tTotal_amount as double,\n\t\tPayment_type as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\twildcardPaths:['nyctaxi-staging/transactional-data/type=green/year=2013/month=08/*.csv','nyctaxi-staging/transactional-data/type=green/year=2013/month=09/*.csv','nyctaxi-staging/transactional-data/type=green/year=2013/month=10/*.csv','nyctaxi-staging/transactional-data/type=green/year=2013/month=11/*.csv','nyctaxi-staging/transactional-data/type=green/year=2013/month=12/*.csv','nyctaxi-staging/transactional-data/type=green/year=2014/month=*/*.csv']) ~> StagingGreenTaxiPre2015\nsource(output(\n\t\tVendorID as integer,\n\t\tlpep_pickup_datetime as timestamp,\n\t\tLpep_dropoff_datetime as timestamp,\n\t\tStore_and_fwd_flag as string,\n\t\tRateCodeID as integer,\n\t\tPickup_longitude as string,\n\t\tPickup_latitude as string,\n\t\tDropoff_longitude as string,\n\t\tDropoff_latitude as string,\n\t\tPassenger_count as integer,\n\t\tTrip_distance as double,\n\t\tFare_amount as double,\n\t\tExtra as double,\n\t\tMTA_tax as double,\n\t\tTip_amount as double,\n\t\tTolls_amount as double,\n\t\tEhail_fee as double,\n\t\timprovement_surcharge as double,\n\t\tTotal_amount as double,\n\t\tPayment_type as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\twildcardPaths:['nyctaxi-staging/transactional-data/type=green/year=2015/month=01/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=02/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=03/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=04/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=05/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=06/*.csv']) ~> StagingGreenTaxi2015H1\nsource(output(\n\t\tVendorID as integer,\n\t\tlpep_pickup_datetime as timestamp,\n\t\tLpep_dropoff_datetime as timestamp,\n\t\tStore_and_fwd_flag as string,\n\t\tRateCodeID as integer,\n\t\tPickup_longitude as string,\n\t\tPickup_latitude as string,\n\t\tDropoff_longitude as string,\n\t\tDropoff_latitude as string,\n\t\tPassenger_count as integer,\n\t\tTrip_distance as double,\n\t\tFare_amount as double,\n\t\tExtra as double,\n\t\tMTA_tax as double,\n\t\tTip_amount as double,\n\t\tTolls_amount as double,\n\t\tEhail_fee as double,\n\t\timprovement_surcharge as double,\n\t\tTotal_amount as double,\n\t\tPayment_type as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\twildcardPaths:['nyctaxi-staging/transactional-data/type=green/year=2015/month=07/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=08/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=09/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=10/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=11/*.csv','nyctaxi-staging/transactional-data/type=green/year=2015/month=12/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=01/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=02/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=03/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=04/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=05/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=06/*.csv']) ~> StagingGreenTaxi2015H22016H1\nsource(output(\n\t\tVendorID as integer,\n\t\tlpep_pickup_datetime as timestamp,\n\t\tlpep_dropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\tRatecodeID as integer,\n\t\tPULocationID as integer,\n\t\tDOLocationID as integer,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\twildcardPaths:['nyctaxi-staging/transactional-data/type=green/year=2016/month=07/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=08/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=09/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=10/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=11/*.csv','nyctaxi-staging/transactional-data/type=green/year=2016/month=12/*.csv']) ~> StagingGreenTaxi2016H2\nsource(output(\n\t\tVendorID as integer,\n\t\tlpep_pickup_datetime as timestamp,\n\t\tlpep_dropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\tRatecodeID as integer,\n\t\tPULocationID as integer,\n\t\tDOLocationID as integer,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\twildcardPaths:['nyctaxi-staging/transactional-data/type=green/year=2017/month=*/*.csv','nyctaxi-staging/transactional-data/type=green/year=2018/month=*/*.csv','nyctaxi-staging/transactional-data/type=green/year=2019/month=*/*.csv']) ~> StagingGreenTaxiPost2017\nDriftPre2015 derive(pickup_location_id = toInteger('0'),\n\t\tdropoff_location_id = toInteger('0'),\n\t\timprovement_surcharge = toDouble('0'),\n\t\ttrip_year = toInteger(left(toString(lpep_pickup_datetime),4)),\n\t\ttrip_month = toInteger(substring(toString(lpep_pickup_datetime), 6, 2)),\n\t\ttaxi_type = 'green') ~> DerivedColumnsPre2015\nDerivedColumnsPre2015 select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = VendorID,\n\t\tpickup_datetime = lpep_pickup_datetime,\n\t\tdropoff_datetime = Lpep_dropoff_datetime,\n\t\tstore_and_fwd_flag = Store_and_fwd_flag,\n\t\trate_code_id = RateCodeID,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude = Pickup_longitude,\n\t\tpickup_latitude = Pickup_latitude,\n\t\tdropoff_longitude = Dropoff_longitude,\n\t\tdropoff_latitude = Dropoff_latitude,\n\t\tpassenger_count = Passenger_count,\n\t\ttrip_distance = Trip_distance,\n\t\tfare_amount = Fare_amount,\n\t\textra = Extra,\n\t\tmta_tax = MTA_tax,\n\t\ttip_amount = Tip_amount,\n\t\ttolls_amount = Tolls_amount,\n\t\tehail_fee = Ehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount = Total_amount,\n\t\tpayment_type = Payment_type,\n\t\ttrip_type = {Trip_type },\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPre2015\nDrift2015H1 derive(pickup_location_id = toInteger('0'),\n\t\tdropoff_location_id = toInteger('0'),\n\t\ttrip_year = toInteger(left(toString(lpep_pickup_datetime),4)),\n\t\ttrip_month = toInteger(substring(toString(lpep_pickup_datetime), 6, 2)),\n\t\ttaxi_type = 'green') ~> DerivedColumns2015H1\nDerivedColumns2015H1 select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = VendorID,\n\t\tpickup_datetime = lpep_pickup_datetime,\n\t\tdropoff_datetime = Lpep_dropoff_datetime,\n\t\tstore_and_fwd_flag = Store_and_fwd_flag,\n\t\trate_code_id = RateCodeID,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude = Pickup_longitude,\n\t\tpickup_latitude = Pickup_latitude,\n\t\tdropoff_longitude = Dropoff_longitude,\n\t\tdropoff_latitude = Dropoff_latitude,\n\t\tpassenger_count = Passenger_count,\n\t\ttrip_distance = Trip_distance,\n\t\tfare_amount = Fare_amount,\n\t\textra = Extra,\n\t\tmta_tax = MTA_tax,\n\t\ttip_amount = Tip_amount,\n\t\ttolls_amount = Tolls_amount,\n\t\tehail_fee = Ehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount = Total_amount,\n\t\tpayment_type = Payment_type,\n\t\ttrip_type = {Trip_type },\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2015H1\nDrift2015H22016H1 derive(pickup_location_id = toInteger('0'),\n\t\tdropoff_location_id = toInteger('0'),\n\t\ttrip_year = toInteger(left(toString(lpep_pickup_datetime),4)),\n\t\ttrip_month = toInteger(substring(toString(lpep_pickup_datetime), 6, 2)),\n\t\ttaxi_type = 'green') ~> DerivedColumns2015H22016H1\nDerivedColumns2015H22016H1 select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = VendorID,\n\t\tpickup_datetime = lpep_pickup_datetime,\n\t\tdropoff_datetime = Lpep_dropoff_datetime,\n\t\tstore_and_fwd_flag = Store_and_fwd_flag,\n\t\trate_code_id = RateCodeID,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude = Pickup_longitude,\n\t\tpickup_latitude = Pickup_latitude,\n\t\tdropoff_longitude = Dropoff_longitude,\n\t\tdropoff_latitude = Dropoff_latitude,\n\t\tpassenger_count = Passenger_count,\n\t\ttrip_distance = Trip_distance,\n\t\tfare_amount = Fare_amount,\n\t\textra = Extra,\n\t\tmta_tax = MTA_tax,\n\t\ttip_amount = Tip_amount,\n\t\ttolls_amount = Tolls_amount,\n\t\tehail_fee = Ehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount = Total_amount,\n\t\tpayment_type = Payment_type,\n\t\ttrip_type = {Trip_type },\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2015H22016H1\nStagingGreenTaxi2016H2 derive(pickup_longitude = '',\n\t\tpickup_latitude = '',\n\t\tdropoff_longitude = '',\n\t\tdropoff_latitude = '',\n\t\ttrip_year = toInteger(left(toString(lpep_pickup_datetime),4)),\n\t\ttrip_month = toInteger(substring(toString(lpep_pickup_datetime), 6, 2)),\n\t\ttaxi_type = 'green') ~> DerivedColumns2016H2\nDerivedColumns2016H2 select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = VendorID,\n\t\tpickup_datetime = lpep_pickup_datetime,\n\t\tdropoff_datetime = lpep_dropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id = RatecodeID,\n\t\tpickup_location_id = PULocationID,\n\t\tdropoff_location_id = DOLocationID,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\tehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_type,\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2016H2\nStagingGreenTaxiPost2017 derive(pickup_longitude = '',\n\t\tpickup_latitude = '',\n\t\tdropoff_longitude = '',\n\t\tdropoff_latitude = '',\n\t\ttrip_year = toInteger(left(toString(lpep_pickup_datetime),4)),\n\t\ttrip_month = toInteger(substring(toString(lpep_pickup_datetime), 6, 2)),\n\t\ttaxi_type = 'green') ~> DerivedColumnsPost2017\nDerivedColumnsPost2017 select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = VendorID,\n\t\tpickup_datetime = lpep_pickup_datetime,\n\t\tdropoff_datetime = lpep_dropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id = RatecodeID,\n\t\tpickup_location_id = PULocationID,\n\t\tdropoff_location_id = DOLocationID,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\tehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_type,\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPost2017\nStagingGreenTaxi2015H1 derive({Trip_type } = toInteger(toString(byName('Trip_type ')))) ~> Drift2015H1\nStagingGreenTaxi2015H22016H1 derive({Trip_type } = toInteger(toString(byName('Trip_type ')))) ~> Drift2015H22016H1\nStagingGreenTaxiPre2015 derive({Trip_type } = toInteger(byName('Trip_type '))) ~> DriftPre2015\nSelectPre2015 sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> PersistPre2015\nSelect2015H1 sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> Persist2015H1\nSelect2015H22016H1 sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> Persist2015H22016H1\nSelect2016H2 sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> Persist2016H2\nSelectPost2017 sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> PersistPost2017"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/1_nycstaginggreentaxipre2015')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstaginggreentaxi2015H1')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstaginggreentaxi2015H22016H1')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstaginggreentaxi2016H2')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstaginggreentaxiPost2017')]",
                "[concat(variables('factoryId'), '/datasets/1_nycrawgreentaxi')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingtorawreferencedf')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingpaymenttype",
                                "type": "DatasetReference"
                            },
                            "name": "StagingPaymentType",
                            "description": "Import data from staging in CSV format",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingtaxizone",
                                "type": "DatasetReference"
                            },
                            "name": "StagingTaxiZone",
                            "description": "Import data from staging in CSV format",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingtripmonth",
                                "type": "DatasetReference"
                            },
                            "name": "StagingTripMonth",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingtriptype",
                                "type": "DatasetReference"
                            },
                            "name": "StagingTripType",
                            "description": "Import data from staging in CSV format",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingvendor",
                                "type": "DatasetReference"
                            },
                            "name": "StagingVendor",
                            "description": "Import data from staging in CSV format",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingratecode",
                                "type": "DatasetReference"
                            },
                            "name": "StagingRateCode",
                            "typeProperties": {}
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "2_nycrawpaymenttype",
                                "type": "DatasetReference"
                            },
                            "name": "RawPaymentType",
                            "description": "Export csv to parquet as single file (small data)"
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawratecode",
                                "type": "DatasetReference"
                            },
                            "name": "RawRateCode"
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawtaxizone",
                                "type": "DatasetReference"
                            },
                            "name": "RawTaxiZone",
                            "description": "Export csv to parquet as single file (small data)"
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawtripmonth",
                                "type": "DatasetReference"
                            },
                            "name": "RawTripMonth",
                            "description": "Export csv to parquet as single file (small data)"
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawtriptype",
                                "type": "DatasetReference"
                            },
                            "name": "RawTripType",
                            "description": "Export csv to parquet as single file (small data)"
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawvendor",
                                "type": "DatasetReference"
                            },
                            "name": "RawVendor",
                            "description": "Export csv to parquet as single file (small data)"
                        }
                    ],
                    "transformations": [],
                    "script": "\n\nsource(output(\n\t\tpayment_type as short,\n\t\tabbreviation as string,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> StagingPaymentType\nsource(output(\n\t\tLocationID as short,\n\t\tBorough as string,\n\t\tZone as string,\n\t\tservice_zone as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> StagingTaxiZone\nsource(output(\n\t\tTrip_Month as string,\n\t\tMonth_Name_Short as string,\n\t\tMonth_Name_Full as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> StagingTripMonth\nsource(output(\n\t\ttrip_type as string,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> StagingTripType\nsource(output(\n\t\tvendor_id as short,\n\t\tabbreviation as string,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> StagingVendor\nsource(output(\n\t\trate_code_id as short,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> StagingRateCode\nStagingPaymentType sink(input(\n\t\tpayment_type as integer,\n\t\tabbreviation as string,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawPaymentType\nStagingRateCode sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawRateCode\nStagingTaxiZone sink(input(\n\t\tlocation_id as string,\n\t\tborough as string,\n\t\tzone as string,\n\t\tservice_zone as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawTaxiZone\nStagingTripMonth sink(input(\n\t\ttrip_month as string,\n\t\tmonth_name_short as string,\n\t\tmonth_name_full as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawTripMonth\nStagingTripType sink(input(\n\t\ttrip_type as integer,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawTripType\nStagingVendor sink(input(\n\t\tvendor_id as integer,\n\t\tabbreviation as string,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawVendor"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/1_nycstagingpaymenttype')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstagingtaxizone')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstagingtripmonth')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstagingtriptype')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstagingvendor')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstagingratecode')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawpaymenttype')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawratecode')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawtaxizone')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawtripmonth')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawtriptype')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawvendor')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawtocuratedgreentaxidf')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "2_RawToCurated"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "2_nycrawgreentaxi",
                                "type": "DatasetReference"
                            },
                            "name": "RawGreenTaxi",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawpaymenttype",
                                "type": "DatasetReference"
                            },
                            "name": "RawPaymentType",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawratecode",
                                "type": "DatasetReference"
                            },
                            "name": "RawRateCode",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawtaxizone",
                                "type": "DatasetReference"
                            },
                            "name": "RawTaxiZone",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawvendor",
                                "type": "DatasetReference"
                            },
                            "name": "RawVendor",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawtriptype",
                                "type": "DatasetReference"
                            },
                            "name": "RawTripType",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawtripmonth",
                                "type": "DatasetReference"
                            },
                            "name": "RawTripMonth",
                            "typeProperties": {}
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "2_nyccuratedgreentaxi",
                                "type": "DatasetReference"
                            },
                            "name": "SinkToCuratedZone"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectGreenTaxiColumns",
                            "description": "Select deduped trips"
                        },
                        {
                            "name": "DerivedColumnsGreenTaxi",
                            "description": "Add derived columns + columns with literal values"
                        },
                        {
                            "name": "JoinWithPaymentType"
                        },
                        {
                            "name": "JoinWithRateZone"
                        },
                        {
                            "name": "JoinWithTaxiZoneForPickup"
                        },
                        {
                            "name": "ReorderAndRenamePickupZone"
                        },
                        {
                            "name": "JoinWithTaxiZoneForDropOff"
                        },
                        {
                            "name": "ReorderAndRenameDropoffZone"
                        },
                        {
                            "name": "JoinWithVendor"
                        },
                        {
                            "name": "FinalColumnList"
                        },
                        {
                            "name": "JoinWithTripType"
                        },
                        {
                            "name": "JoinWithTripMonth"
                        }
                    ],
                    "script": "\n\nsource(output(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'dataset_file_nm',\n\tformat: 'parquet',\n\twildcardPaths:['nyctaxi-raw-df/transactions/green-taxi/*/*/*.parquet']) ~> RawGreenTaxi\nsource(output(\n\t\tpayment_type as short,\n\t\tabbreviation as string,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawPaymentType\nsource(output(\n\t\trate_code_id as short,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawRateCode\nsource(output(\n\t\tLocationID as string,\n\t\tBorough as string,\n\t\tZone as string,\n\t\tservice_zone as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawTaxiZone\nsource(output(\n\t\tvendor_id as short,\n\t\tabbreviation as string,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawVendor\nsource(output(\n\t\ttrip_type as integer,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawTripType\nsource(output(\n\t\ttrip_month as string,\n\t\tmonth_name_short as string,\n\t\tmonth_name_full as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawTripMonth\nRawGreenTaxi select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\tehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_type,\n\t\tdataset_file_nm\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectGreenTaxiColumns\nSelectGreenTaxiColumns derive(pickup_year = year(pickup_datetime),\n\t\tpickup_month = month(pickup_datetime),\n\t\tpickup_day = dayOfWeek(pickup_datetime),\n\t\tpickup_hour = hour(pickup_datetime),\n\t\tpickup_minute = minute(pickup_datetime),\n\t\tpickup_second = second(pickup_datetime),\n\t\tdropoff_year = year(dropoff_datetime),\n\t\tdropoff_month = month(dropoff_datetime),\n\t\tdropoff_day = dayOfWeek(dropoff_datetime),\n\t\tdropoff_hour = hour(dropoff_datetime),\n\t\tdropoff_minute = minute(dropoff_datetime),\n\t\tdropoff_second = second(dropoff_datetime),\n\t\ttrip_year = substring(dataset_file_nm,(instr(dataset_file_nm, 'trip_year=')+10),4),\n\t\ttrip_month = replace(substring(dataset_file_nm,(instr(dataset_file_nm, 'trip_month=')+11),2), '/', '')) ~> DerivedColumnsGreenTaxi\nDerivedColumnsGreenTaxi, RawPaymentType join(SelectGreenTaxiColumns@payment_type == RawPaymentType@payment_type,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithPaymentType\nJoinWithTripMonth, RawRateCode join(SelectGreenTaxiColumns@rate_code_id == RawRateCode@rate_code_id,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithRateZone\nJoinWithRateZone, RawTaxiZone join(pickup_location_id == LocationID,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithTaxiZoneForPickup\nJoinWithTaxiZoneForPickup select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id = {RawRateCode@rate_code_id},\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\tehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type = {SelectGreenTaxiColumns@payment_type},\n\t\ttrip_type = {SelectGreenTaxiColumns@trip_type},\n\t\tdataset_file_nm,\n\t\tpickup_year,\n\t\tpickup_month,\n\t\tpickup_day,\n\t\tpickup_hour,\n\t\tpickup_minute,\n\t\tpickup_second,\n\t\tdropoff_year,\n\t\tdropoff_month,\n\t\tdropoff_day,\n\t\tdropoff_hour,\n\t\tdropoff_minute,\n\t\tdropoff_second,\n\t\ttrip_year,\n\t\ttrip_month = {DerivedColumnsGreenTaxi@trip_month},\n\t\tpayment_type_description = {RawPaymentType@description},\n\t\trate_code_description = {RawRateCode@description},\n\t\tpickup_borough = Borough,\n\t\tpickup_zone = Zone,\n\t\tpickup_service_zone = service_zone,\n\t\tmonth_name_short,\n\t\tmonth_name_full,\n\t\ttrip_type_description = {RawTripType@description}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: true) ~> ReorderAndRenamePickupZone\nReorderAndRenamePickupZone, RawTaxiZone join(dropoff_location_id == LocationID,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithTaxiZoneForDropOff\nJoinWithTaxiZoneForDropOff select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\tehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_type,\n\t\tdataset_file_nm,\n\t\tpickup_year,\n\t\tpickup_month,\n\t\tpickup_day,\n\t\tpickup_hour,\n\t\tpickup_minute,\n\t\tpickup_second,\n\t\tdropoff_year,\n\t\tdropoff_month,\n\t\tdropoff_day,\n\t\tdropoff_hour,\n\t\tdropoff_minute,\n\t\tdropoff_second,\n\t\ttrip_year,\n\t\ttrip_month,\n\t\tpayment_type_description,\n\t\trate_code_description,\n\t\tpickup_borough,\n\t\tpickup_zone,\n\t\tpickup_service_zone,\n\t\tdropoff_borough = Borough,\n\t\tdropoff_zone = Zone,\n\t\tdropoff_service_zone = service_zone,\n\t\tmonth_name_short,\n\t\tmonth_name_full,\n\t\ttrip_type_description\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ReorderAndRenameDropoffZone\nReorderAndRenameDropoffZone, RawVendor join(ReorderAndRenameDropoffZone@vendor_id == RawVendor@vendor_id,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithVendor\nJoinWithVendor select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = {ReorderAndRenameDropoffZone@vendor_id},\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\tehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_type,\n\t\tvendor_abbreviation = abbreviation,\n\t\tvendor_description = description,\n\t\ttrip_type_description,\n\t\tmonth_name_short,\n\t\tmonth_name_full,\n\t\tpayment_type_description,\n\t\trate_code_description,\n\t\tpickup_borough,\n\t\tpickup_zone,\n\t\tpickup_service_zone,\n\t\tdropoff_borough,\n\t\tdropoff_zone,\n\t\tdropoff_service_zone,\n\t\tpickup_year,\n\t\tpickup_month,\n\t\tpickup_day,\n\t\tpickup_hour,\n\t\tpickup_minute,\n\t\tpickup_second,\n\t\tdropoff_year,\n\t\tdropoff_month,\n\t\tdropoff_day,\n\t\tdropoff_hour,\n\t\tdropoff_minute,\n\t\tdropoff_second,\n\t\ttrip_year,\n\t\ttrip_month,\n\t\tdataset_file_nm\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FinalColumnList\nJoinWithPaymentType, RawTripType join(SelectGreenTaxiColumns@trip_type == RawTripType@trip_type,\n\tjoinType:'left',\n\tbroadcast: 'none')~> JoinWithTripType\nJoinWithTripType, RawTripMonth join(DerivedColumnsGreenTaxi@trip_month == RawTripMonth@trip_month,\n\tjoinType:'left',\n\tbroadcast: 'none')~> JoinWithTripMonth\nFinalColumnList sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as integer,\n\t\tdropoff_location_id as integer,\n\t\tpickup_longitude as string,\n\t\tpickup_latitude as string,\n\t\tdropoff_longitude as string,\n\t\tdropoff_latitude as string,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\tvendor_abbreviation as string,\n\t\tvendor_description as string,\n\t\ttrip_type_description as string,\n\t\tmonth_name_short as string,\n\t\tmonth_name_full as string,\n\t\tpayment_type_description as string,\n\t\trate_code_description as string,\n\t\tpickup_borough as string,\n\t\tpickup_zone as string,\n\t\tpickup_service_zone as string,\n\t\tdropoff_borough as string,\n\t\tdropoff_zone as string,\n\t\tdropoff_service_zone as string,\n\t\tpickup_year as integer,\n\t\tpickup_month as integer,\n\t\tpickup_day as integer,\n\t\tpickup_hour as integer,\n\t\tpickup_minute as integer,\n\t\tpickup_second as integer,\n\t\tdropoff_year as integer,\n\t\tdropoff_month as integer,\n\t\tdropoff_day as integer,\n\t\tdropoff_hour as integer,\n\t\tdropoff_minute as integer,\n\t\tdropoff_second as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> SinkToCuratedZone"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/2_nycrawgreentaxi')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawpaymenttype')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawratecode')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawtaxizone')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawvendor')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawtriptype')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawtripmonth')]",
                "[concat(variables('factoryId'), '/datasets/2_nyccuratedgreentaxi')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/1_nycstagingtorawyellowtaxidf')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "1_StagingToRaw"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingyellowtaxipre2015",
                                "type": "DatasetReference"
                            },
                            "name": "StagingYellowTaxiPre2015",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingyellowtaxi20152016H1",
                                "type": "DatasetReference"
                            },
                            "name": "StagingYellowTaxi20152016H1",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingyellowtaxi2016H2",
                                "type": "DatasetReference"
                            },
                            "name": "StagingYellowTaxi2016H2",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycstagingyellowtaxiPost2017",
                                "type": "DatasetReference"
                            },
                            "name": "StagingYellowTaxiPost2017",
                            "typeProperties": {}
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "1_nycrawyellowtaxi",
                                "type": "DatasetReference"
                            },
                            "name": "PersistPre2015"
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycrawyellowtaxi",
                                "type": "DatasetReference"
                            },
                            "name": "Persist2015H22016H1"
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycrawyellowtaxi",
                                "type": "DatasetReference"
                            },
                            "name": "Persist2016H2"
                        },
                        {
                            "dataset": {
                                "referenceName": "1_nycrawyellowtaxi",
                                "type": "DatasetReference"
                            },
                            "name": "PersistPost2017"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DerivedColumnsPre2015"
                        },
                        {
                            "name": "SelectPre2015"
                        },
                        {
                            "name": "DerivedColumns2015H22016H1"
                        },
                        {
                            "name": "Select2015H22016H1"
                        },
                        {
                            "name": "DerivedColumns2016H2"
                        },
                        {
                            "name": "Select2016H2"
                        },
                        {
                            "name": "DerivedColumnsPost2017"
                        },
                        {
                            "name": "SelectPost2017"
                        }
                    ],
                    "script": "\n\nsource(output(\n\t\tvendor_id as string,\n\t\tpickup_datetime as string,\n\t\tdropoff_datetime as string,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\trate_code as integer,\n\t\tstore_and_fwd_flag as string,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpayment_type as string,\n\t\tfare_amount as double,\n\t\tsurcharge as string,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\ttotal_amount as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\twildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2009/month=*/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2010/month=*/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2011/month=*/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2012/month=*/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2013/month=*/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2014/month=*/*.csv']) ~> StagingYellowTaxiPre2015\nsource(output(\n\t\tVendorID as string,\n\t\ttpep_pickup_datetime as string,\n\t\ttpep_dropoff_datetime as string,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tRateCodeID as integer,\n\t\tstore_and_fwd_flag as string,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpayment_type as string,\n\t\tfare_amount as double,\n\t\textra as string,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\twildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2015/month=*/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=01/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=02/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=03/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=04/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=05/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=06/*.csv']) ~> StagingYellowTaxi20152016H1\nsource(output(\n\t\tVendorID as integer,\n\t\ttpep_pickup_datetime as timestamp,\n\t\ttpep_dropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\tRatecodeID as integer,\n\t\tPULocationID as integer,\n\t\tDOLocationID as integer,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\twildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2016/month=07/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=08/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=09/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=10/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=11/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2016/month=12/*.csv']) ~> StagingYellowTaxi2016H2\nsource(output(\n\t\tVendorID as integer,\n\t\ttpep_pickup_datetime as timestamp,\n\t\ttpep_dropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\tRatecodeID as integer,\n\t\tPULocationID as integer,\n\t\tDOLocationID as integer,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\twildcardPaths:['nyctaxi-staging/transactional-data/type=yellow/year=2017/month=*/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2018/month=*/*.csv','nyctaxi-staging/transactional-data/type=yellow/year=2019/month=*/*.csv']) ~> StagingYellowTaxiPost2017\nStagingYellowTaxiPre2015 derive(pickup_location_id = toInteger('0'),\n\t\tdropoff_location_id = toInteger('0'),\n\t\timprovement_surcharge = toDouble('0'),\n\t\ttrip_year = toInteger(left(toString(pickup_datetime),4)),\n\t\ttrip_month = toInteger(substring(toString(pickup_datetime), 6, 2)),\n\t\ttaxi_type = 'yellow') ~> DerivedColumnsPre2015\nDerivedColumnsPre2015 select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id = rate_code,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra = surcharge,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPre2015\nStagingYellowTaxi20152016H1 derive(pickup_location_id = toInteger('0'),\n\t\tdropoff_location_id = toInteger('0'),\n\t\ttrip_year = toInteger(left(toString(tpep_pickup_datetime),4)),\n\t\ttrip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),\n\t\ttaxi_type = 'yellow') ~> DerivedColumns2015H22016H1\nDerivedColumns2015H22016H1 select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = VendorID,\n\t\tpickup_datetime = tpep_pickup_datetime,\n\t\tdropoff_datetime = tpep_dropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id = RateCodeID,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2015H22016H1\nStagingYellowTaxi2016H2 derive(pickup_longitude = '',\n\t\tpickup_latitude = '',\n\t\tdropoff_longitude = '',\n\t\tdropoff_latitude = '',\n\t\ttrip_year = toInteger(left(toString(tpep_pickup_datetime),4)),\n\t\ttrip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),\n\t\ttaxi_type = 'yellow') ~> DerivedColumns2016H2\nDerivedColumns2016H2 select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = VendorID,\n\t\tpickup_datetime = tpep_pickup_datetime,\n\t\tdropoff_datetime = tpep_dropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id = RatecodeID,\n\t\tpickup_location_id = PULocationID,\n\t\tdropoff_location_id = DOLocationID,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2016H2\nStagingYellowTaxiPost2017 derive(pickup_longitude = '',\n\t\tpickup_latitude = '',\n\t\tdropoff_longitude = '',\n\t\tdropoff_latitude = '',\n\t\ttrip_year = toInteger(left(toString(tpep_pickup_datetime),4)),\n\t\ttrip_month = toInteger(substring(toString(tpep_pickup_datetime), 6, 2)),\n\t\ttaxi_type = 'yellow') ~> DerivedColumnsPost2017\nDerivedColumnsPost2017 select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = VendorID,\n\t\tpickup_datetime = tpep_pickup_datetime,\n\t\tdropoff_datetime = tpep_dropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id = RatecodeID,\n\t\tpickup_location_id = PULocationID,\n\t\tdropoff_location_id = DOLocationID,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPost2017\nSelectPre2015 sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> PersistPre2015\nSelect2015H22016H1 sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> Persist2015H22016H1\nSelect2016H2 sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> Persist2016H2\nSelectPost2017 sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as string,\n\t\tdropoff_location_id as string,\n\t\tpickup_longitude as double,\n\t\tpickup_latitude as double,\n\t\tdropoff_longitude as double,\n\t\tdropoff_latitude as double,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> PersistPost2017"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/1_nycstagingyellowtaxipre2015')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstagingyellowtaxi20152016H1')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstagingyellowtaxi2016H2')]",
                "[concat(variables('factoryId'), '/datasets/1_nycstagingyellowtaxiPost2017')]",
                "[concat(variables('factoryId'), '/datasets/1_nycrawyellowtaxi')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/2_nycrawtocuratedyellowtaxidf')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "2_RawToCurated"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "2_nycrawyellowtaxi",
                                "type": "DatasetReference"
                            },
                            "name": "RawYellowTaxi",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawpaymenttype",
                                "type": "DatasetReference"
                            },
                            "name": "RawPaymentType",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawratecode",
                                "type": "DatasetReference"
                            },
                            "name": "RawRateCode",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawtaxizone",
                                "type": "DatasetReference"
                            },
                            "name": "RawTaxiZone",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawvendor",
                                "type": "DatasetReference"
                            },
                            "name": "RawVendor",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawtriptype",
                                "type": "DatasetReference"
                            },
                            "name": "RawTripType",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "2_nycrawtripmonth",
                                "type": "DatasetReference"
                            },
                            "name": "RawTripMonth",
                            "typeProperties": {}
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "2_nyccuratedyellowtaxi",
                                "type": "DatasetReference"
                            },
                            "name": "SinkToCuratedZone"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectYellowTaxiColumns",
                            "description": "Select deduped trips"
                        },
                        {
                            "name": "DerivedColumnsYellowTaxi",
                            "description": "Add derived columns + columns with literal values"
                        },
                        {
                            "name": "JoinWithPaymentType"
                        },
                        {
                            "name": "JoinWithRateZone"
                        },
                        {
                            "name": "JoinWithTaxiZoneForPickup"
                        },
                        {
                            "name": "ReorderAndRenamePickupZone"
                        },
                        {
                            "name": "JoinWithTaxiZoneForDropOff"
                        },
                        {
                            "name": "ReorderAndRenameDropoffZone"
                        },
                        {
                            "name": "JoinWithVendor"
                        },
                        {
                            "name": "FinalColumnList"
                        },
                        {
                            "name": "JoinWithTripMonth"
                        },
                        {
                            "name": "DriftColumns",
                            "description": "Creates an explicit mapping for each drifted column"
                        }
                    ],
                    "script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'dataset_file_nm',\n\tformat: 'parquet',\n\twildcardPaths:['nyctaxi-raw-df/transactions/yellow-taxi/*/*/*.parquet']) ~> RawYellowTaxi\nsource(output(\n\t\tpayment_type as short,\n\t\tabbreviation as string,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawPaymentType\nsource(output(\n\t\trate_code_id as short,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawRateCode\nsource(output(\n\t\tLocationID as string,\n\t\tBorough as string,\n\t\tZone as string,\n\t\tservice_zone as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawTaxiZone\nsource(output(\n\t\tvendor_id as short,\n\t\tabbreviation as string,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawVendor\nsource(output(\n\t\ttrip_type as integer,\n\t\tdescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawTripType\nsource(output(\n\t\ttrip_month as string,\n\t\tmonth_name_short as string,\n\t\tmonth_name_full as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> RawTripMonth\nDriftColumns select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\tdataset_file_nm\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectYellowTaxiColumns\nSelectYellowTaxiColumns derive(pickup_year = year(pickup_datetime),\n\t\tpickup_month = month(pickup_datetime),\n\t\tpickup_day = dayOfWeek(pickup_datetime),\n\t\tpickup_hour = hour(pickup_datetime),\n\t\tpickup_minute = minute(pickup_datetime),\n\t\tpickup_second = second(pickup_datetime),\n\t\tpickup_date = toDate(pickup_datetime),\n\t\tdropoff_year = year(dropoff_datetime),\n\t\tdropoff_month = month(dropoff_datetime),\n\t\tdropoff_day = dayOfWeek(dropoff_datetime),\n\t\tdropoff_hour = hour(dropoff_datetime),\n\t\tdropoff_minute = minute(dropoff_datetime),\n\t\tdropoff_second = second(dropoff_datetime),\n\t\tdropoff_date = toDate(dropoff_datetime),\n\t\ttrip_year = substring(dataset_file_nm,(instr(dataset_file_nm, 'trip_year=')+10),4),\n\t\ttrip_month = replace(substring(dataset_file_nm,(instr(dataset_file_nm, 'trip_month=')+11),2), '/', '')) ~> DerivedColumnsYellowTaxi\nDerivedColumnsYellowTaxi, RawPaymentType join(SelectYellowTaxiColumns@payment_type == RawPaymentType@payment_type,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithPaymentType\nJoinWithTripMonth, RawRateCode join(SelectYellowTaxiColumns@rate_code_id == RawRateCode@rate_code_id,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithRateZone\nJoinWithRateZone, RawTaxiZone join(pickup_location_id == LocationID,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithTaxiZoneForPickup\nJoinWithTaxiZoneForPickup select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id = SelectYellowTaxiColumns@rate_code_id,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type = SelectYellowTaxiColumns@payment_type,\n\t\tdataset_file_nm,\n\t\tpickup_year,\n\t\tpickup_month,\n\t\tpickup_day,\n\t\tpickup_hour,\n\t\tpickup_minute,\n\t\tpickup_second,\n\t\tdropoff_year,\n\t\tdropoff_month,\n\t\tdropoff_day,\n\t\tdropoff_hour,\n\t\tdropoff_minute,\n\t\tdropoff_second,\n\t\ttrip_year,\n\t\ttrip_month = DerivedColumnsYellowTaxi@trip_month,\n\t\tpayment_type_description = RawPaymentType@description,\n\t\trate_code_description = RawRateCode@description,\n\t\tpickup_borough = Borough,\n\t\tpickup_zone = Zone,\n\t\tpickup_service_zone = service_zone,\n\t\tmonth_name_short,\n\t\tmonth_name_full,\n\t\tpickup_date,\n\t\tdropoff_date\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ReorderAndRenamePickupZone\nReorderAndRenamePickupZone, RawTaxiZone join(dropoff_location_id == LocationID,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithTaxiZoneForDropOff\nJoinWithTaxiZoneForDropOff select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\tdataset_file_nm,\n\t\tpickup_year,\n\t\tpickup_month,\n\t\tpickup_day,\n\t\tpickup_hour,\n\t\tpickup_minute,\n\t\tpickup_second,\n\t\tdropoff_year,\n\t\tdropoff_month,\n\t\tdropoff_day,\n\t\tdropoff_hour,\n\t\tdropoff_minute,\n\t\tdropoff_second,\n\t\ttrip_year,\n\t\ttrip_month,\n\t\tpayment_type_description,\n\t\trate_code_description,\n\t\tpickup_borough,\n\t\tpickup_zone,\n\t\tpickup_service_zone,\n\t\tdropoff_borough = Borough,\n\t\tdropoff_zone = Zone,\n\t\tdropoff_service_zone = service_zone,\n\t\tmonth_name_short,\n\t\tmonth_name_full,\n\t\tpickup_date,\n\t\tdropoff_date\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ReorderAndRenameDropoffZone\nReorderAndRenameDropoffZone, RawVendor join(ReorderAndRenameDropoffZone@vendor_id == RawVendor@vendor_id,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinWithVendor\nJoinWithVendor select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id = ReorderAndRenameDropoffZone@vendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_year,\n\t\ttrip_month,\n\t\tvendor_abbreviation = abbreviation,\n\t\tvendor_description = description,\n\t\tmonth_name_short,\n\t\tmonth_name_full,\n\t\tpayment_type_description,\n\t\trate_code_description,\n\t\tpickup_borough,\n\t\tpickup_zone,\n\t\tpickup_service_zone,\n\t\tdropoff_borough,\n\t\tdropoff_zone,\n\t\tdropoff_service_zone,\n\t\tpickup_year,\n\t\tpickup_month,\n\t\tpickup_day,\n\t\tpickup_hour,\n\t\tpickup_minute,\n\t\tpickup_second,\n\t\tpickup_date,\n\t\tdropoff_year,\n\t\tdropoff_month,\n\t\tdropoff_day,\n\t\tdropoff_hour,\n\t\tdropoff_minute,\n\t\tdropoff_second,\n\t\tdropoff_date,\n\t\tdataset_file_nm\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FinalColumnList\nJoinWithPaymentType, RawTripMonth join(DerivedColumnsYellowTaxi@trip_month == RawTripMonth@trip_month,\n\tjoinType:'left',\n\tbroadcast: 'none')~> JoinWithTripMonth\nRawYellowTaxi derive(taxi_type = toString(byName('taxi_type')),\n\t\tvendor_id = toInteger(byName('vendor_id')),\n\t\tpickup_datetime = toTimestamp(byName('pickup_datetime')),\n\t\tdropoff_datetime = toTimestamp(byName('dropoff_datetime')),\n\t\tstore_and_fwd_flag = toString(byName('store_and_fwd_flag')),\n\t\trate_code_id = toInteger(byName('rate_code_id')),\n\t\tpickup_location_id = toString(byName('pickup_location_id')),\n\t\tdropoff_location_id = toString(byName('dropoff_location_id')),\n\t\tpickup_longitude = toDouble(byName('pickup_longitude')),\n\t\tpickup_latitude = toDouble(byName('pickup_latitude')),\n\t\tdropoff_longitude = toDouble(byName('dropoff_longitude')),\n\t\tdropoff_latitude = toDouble(byName('dropoff_latitude')),\n\t\tpassenger_count = toInteger(byName('passenger_count')),\n\t\ttrip_distance = toDouble(byName('trip_distance')),\n\t\tfare_amount = toDouble(byName('fare_amount')),\n\t\textra = toDouble(byName('extra')),\n\t\tmta_tax = toDouble(byName('mta_tax')),\n\t\ttip_amount = toDouble(byName('tip_amount')),\n\t\ttolls_amount = toDouble(byName('tolls_amount')),\n\t\timprovement_surcharge = toDouble(byName('improvement_surcharge')),\n\t\ttotal_amount = toDouble(byName('total_amount')),\n\t\tpayment_type = toInteger(byName('payment_type'))) ~> DriftColumns\nFinalColumnList sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as integer,\n\t\tdropoff_location_id as integer,\n\t\tpickup_longitude as string,\n\t\tpickup_latitude as string,\n\t\tdropoff_longitude as string,\n\t\tdropoff_latitude as string,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\tvendor_abbreviation as string,\n\t\tvendor_description as string,\n\t\ttrip_type_description as string,\n\t\tmonth_name_short as string,\n\t\tmonth_name_full as string,\n\t\tpayment_type_description as string,\n\t\trate_code_description as string,\n\t\tpickup_borough as string,\n\t\tpickup_zone as string,\n\t\tpickup_service_zone as string,\n\t\tdropoff_borough as string,\n\t\tdropoff_zone as string,\n\t\tdropoff_service_zone as string,\n\t\tpickup_year as integer,\n\t\tpickup_month as integer,\n\t\tpickup_day as integer,\n\t\tpickup_hour as integer,\n\t\tpickup_minute as integer,\n\t\tpickup_second as integer,\n\t\tdropoff_year as integer,\n\t\tdropoff_month as integer,\n\t\tdropoff_day as integer,\n\t\tdropoff_hour as integer,\n\t\tdropoff_minute as integer,\n\t\tdropoff_second as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tpartitionBy('key',\n\t\t0,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> SinkToCuratedZone"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/2_nycrawyellowtaxi')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawpaymenttype')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawratecode')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawtaxizone')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawvendor')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawtriptype')]",
                "[concat(variables('factoryId'), '/datasets/2_nycrawtripmonth')]",
                "[concat(variables('factoryId'), '/datasets/2_nyccuratedyellowtaxi')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/3_nyccuratedtoconsumptiondf')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "3_CuratedToConsumption"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "3_nyccuratedyellowtaxi",
                                "type": "DatasetReference"
                            },
                            "name": "YellowTaxi",
                            "typeProperties": {}
                        },
                        {
                            "dataset": {
                                "referenceName": "3_nyccuratedgreentaxi",
                                "type": "DatasetReference"
                            },
                            "name": "GreenTaxi",
                            "typeProperties": {}
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "3_nycconsumption",
                                "type": "DatasetReference"
                            },
                            "name": "SinkToConsumption"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DriftYellowTaxi",
                            "description": "Creates an explicit mapping for each drifted column"
                        },
                        {
                            "name": "DriftGreenTaxi",
                            "description": "Creates an explicit mapping for each drifted column"
                        },
                        {
                            "name": "FinalColumnsGreen"
                        },
                        {
                            "name": "DerivedColumnsYellowTaxi"
                        },
                        {
                            "name": "FinalColumnsYellow"
                        },
                        {
                            "name": "UnionYellowGreen"
                        }
                    ],
                    "script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> YellowTaxi\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> GreenTaxi\nYellowTaxi derive(taxi_type = toString(byName('taxi_type')),\n\t\tvendor_id = toInteger(byName('vendor_id')),\n\t\tpickup_datetime = toTimestamp(byName('pickup_datetime')),\n\t\tdropoff_datetime = toTimestamp(byName('dropoff_datetime')),\n\t\tstore_and_fwd_flag = toString(byName('store_and_fwd_flag')),\n\t\trate_code_id = toInteger(byName('rate_code_id')),\n\t\tpickup_location_id = toInteger(byName('pickup_location_id')),\n\t\tdropoff_location_id = toInteger(byName('dropoff_location_id')),\n\t\tpickup_longitude = toString(byName('pickup_longitude')),\n\t\tpickup_latitude = toString(byName('pickup_latitude')),\n\t\tdropoff_longitude = toString(byName('dropoff_longitude')),\n\t\tdropoff_latitude = toString(byName('dropoff_latitude')),\n\t\tpassenger_count = toInteger(byName('passenger_count')),\n\t\ttrip_distance = toDouble(byName('trip_distance')),\n\t\tfare_amount = toDouble(byName('fare_amount')),\n\t\textra = toDouble(byName('extra')),\n\t\tmta_tax = toDouble(byName('mta_tax')),\n\t\ttip_amount = toDouble(byName('tip_amount')),\n\t\ttolls_amount = toDouble(byName('tolls_amount')),\n\t\timprovement_surcharge = toDouble(byName('improvement_surcharge')),\n\t\ttotal_amount = toDouble(byName('total_amount')),\n\t\tpayment_type = toInteger(byName('payment_type')),\n\t\tvendor_abbreviation = toString(byName('vendor_abbreviation')),\n\t\tvendor_description = toString(byName('vendor_description')),\n\t\tmonth_name_short = toString(byName('month_name_short')),\n\t\tmonth_name_full = toString(byName('month_name_full')),\n\t\tpayment_type_description = toString(byName('payment_type_description')),\n\t\trate_code_description = toString(byName('rate_code_description')),\n\t\tpickup_borough = toString(byName('pickup_borough')),\n\t\tpickup_zone = toString(byName('pickup_zone')),\n\t\tpickup_service_zone = toString(byName('pickup_service_zone')),\n\t\tdropoff_borough = toString(byName('dropoff_borough')),\n\t\tdropoff_zone = toString(byName('dropoff_zone')),\n\t\tdropoff_service_zone = toString(byName('dropoff_service_zone')),\n\t\tpickup_year = toInteger(byName('pickup_year')),\n\t\tpickup_month = toInteger(byName('pickup_month')),\n\t\tpickup_day = toInteger(byName('pickup_day')),\n\t\tpickup_hour = toInteger(byName('pickup_hour')),\n\t\tpickup_minute = toInteger(byName('pickup_minute')),\n\t\tpickup_second = toInteger(byName('pickup_second')),\n\t\tpickup_date = toDate(byName('pickup_date')),\n\t\tdropoff_year = toInteger(byName('dropoff_year')),\n\t\tdropoff_month = toInteger(byName('dropoff_month')),\n\t\tdropoff_day = toInteger(byName('dropoff_day')),\n\t\tdropoff_hour = toInteger(byName('dropoff_hour')),\n\t\tdropoff_minute = toInteger(byName('dropoff_minute')),\n\t\tdropoff_second = toInteger(byName('dropoff_second')),\n\t\tdropoff_date = toDate(byName('dropoff_date')),\n\t\tdataset_file_nm = toString(byName('dataset_file_nm')),\n\t\ttrip_year = toInteger(byName('trip_year')),\n\t\ttrip_month = toInteger(byName('trip_month'))) ~> DriftYellowTaxi\nGreenTaxi derive(taxi_type = toString(byName('taxi_type')),\n\t\tvendor_id = toInteger(byName('vendor_id')),\n\t\tpickup_datetime = toTimestamp(byName('pickup_datetime')),\n\t\tdropoff_datetime = toTimestamp(byName('dropoff_datetime')),\n\t\tstore_and_fwd_flag = toString(byName('store_and_fwd_flag')),\n\t\trate_code_id = toInteger(byName('rate_code_id')),\n\t\tpickup_location_id = toInteger(byName('pickup_location_id')),\n\t\tdropoff_location_id = toInteger(byName('dropoff_location_id')),\n\t\tpickup_longitude = toString(byName('pickup_longitude')),\n\t\tpickup_latitude = toString(byName('pickup_latitude')),\n\t\tdropoff_longitude = toString(byName('dropoff_longitude')),\n\t\tdropoff_latitude = toString(byName('dropoff_latitude')),\n\t\tpassenger_count = toInteger(byName('passenger_count')),\n\t\ttrip_distance = toDouble(byName('trip_distance')),\n\t\tfare_amount = toDouble(byName('fare_amount')),\n\t\textra = toDouble(byName('extra')),\n\t\tmta_tax = toDouble(byName('mta_tax')),\n\t\ttip_amount = toDouble(byName('tip_amount')),\n\t\ttolls_amount = toDouble(byName('tolls_amount')),\n\t\tehail_fee = toDouble(byName('ehail_fee')),\n\t\timprovement_surcharge = toDouble(byName('improvement_surcharge')),\n\t\ttotal_amount = toDouble(byName('total_amount')),\n\t\tpayment_type = toInteger(byName('payment_type')),\n\t\ttrip_type = toInteger(byName('trip_type')),\n\t\tvendor_abbreviation = toString(byName('vendor_abbreviation')),\n\t\tvendor_description = toString(byName('vendor_description')),\n\t\ttrip_type_description = toString(byName('trip_type_description')),\n\t\tmonth_name_short = toString(byName('month_name_short')),\n\t\tmonth_name_full = toString(byName('month_name_full')),\n\t\tpayment_type_description = toString(byName('payment_type_description')),\n\t\trate_code_description = toString(byName('rate_code_description')),\n\t\tpickup_borough = toString(byName('pickup_borough')),\n\t\tpickup_zone = toString(byName('pickup_zone')),\n\t\tpickup_service_zone = toString(byName('pickup_service_zone')),\n\t\tdropoff_borough = toString(byName('dropoff_borough')),\n\t\tdropoff_zone = toString(byName('dropoff_zone')),\n\t\tdropoff_service_zone = toString(byName('dropoff_service_zone')),\n\t\tpickup_year = toInteger(byName('pickup_year')),\n\t\tpickup_month = toInteger(byName('pickup_month')),\n\t\tpickup_day = toInteger(byName('pickup_day')),\n\t\tpickup_hour = toInteger(byName('pickup_hour')),\n\t\tpickup_minute = toInteger(byName('pickup_minute')),\n\t\tpickup_second = toInteger(byName('pickup_second')),\n\t\tdropoff_year = toInteger(byName('dropoff_year')),\n\t\tdropoff_month = toInteger(byName('dropoff_month')),\n\t\tdropoff_day = toInteger(byName('dropoff_day')),\n\t\tdropoff_hour = toInteger(byName('dropoff_hour')),\n\t\tdropoff_minute = toInteger(byName('dropoff_minute')),\n\t\tdropoff_second = toInteger(byName('dropoff_second')),\n\t\tdataset_file_nm = toString(byName('dataset_file_nm')),\n\t\ttrip_year = toInteger(byName('trip_year')),\n\t\ttrip_month = toInteger(byName('trip_month'))) ~> DriftGreenTaxi\nDriftGreenTaxi select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\tehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_type,\n\t\tvendor_abbreviation,\n\t\tvendor_description,\n\t\ttrip_type_description,\n\t\tmonth_name_short,\n\t\tmonth_name_full,\n\t\tpayment_type_description,\n\t\trate_code_description,\n\t\tpickup_borough,\n\t\tpickup_zone,\n\t\tpickup_service_zone,\n\t\tdropoff_borough,\n\t\tdropoff_zone,\n\t\tdropoff_service_zone,\n\t\tpickup_year,\n\t\tpickup_month,\n\t\tpickup_day,\n\t\tpickup_hour,\n\t\tpickup_minute,\n\t\tpickup_second,\n\t\tdropoff_year,\n\t\tdropoff_month,\n\t\tdropoff_day,\n\t\tdropoff_hour,\n\t\tdropoff_minute,\n\t\tdropoff_second,\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FinalColumnsGreen\nDriftYellowTaxi derive(ehail_fee = toDouble('0.0'),\n\t\ttrip_type = toInteger(0),\n\t\ttrip_type_description = '') ~> DerivedColumnsYellowTaxi\nDerivedColumnsYellowTaxi select(mapColumn(\n\t\ttaxi_type,\n\t\tvendor_id,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tstore_and_fwd_flag,\n\t\trate_code_id,\n\t\tpickup_location_id,\n\t\tdropoff_location_id,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpassenger_count,\n\t\ttrip_distance,\n\t\tfare_amount,\n\t\textra,\n\t\tmta_tax,\n\t\ttip_amount,\n\t\ttolls_amount,\n\t\tehail_fee,\n\t\timprovement_surcharge,\n\t\ttotal_amount,\n\t\tpayment_type,\n\t\ttrip_type,\n\t\tvendor_abbreviation,\n\t\tvendor_description,\n\t\ttrip_type_description,\n\t\tmonth_name_short,\n\t\tmonth_name_full,\n\t\tpayment_type_description,\n\t\trate_code_description,\n\t\tpickup_borough,\n\t\tpickup_zone,\n\t\tpickup_service_zone,\n\t\tdropoff_borough,\n\t\tdropoff_zone,\n\t\tdropoff_service_zone,\n\t\tpickup_year,\n\t\tpickup_month,\n\t\tpickup_day,\n\t\tpickup_hour,\n\t\tpickup_minute,\n\t\tpickup_second,\n\t\tdropoff_year,\n\t\tdropoff_month,\n\t\tdropoff_day,\n\t\tdropoff_hour,\n\t\tdropoff_minute,\n\t\tdropoff_second,\n\t\ttrip_year,\n\t\ttrip_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FinalColumnsYellow\nFinalColumnsYellow, FinalColumnsGreen union(byName: true)~> UnionYellowGreen\nUnionYellowGreen sink(input(\n\t\ttaxi_type as string,\n\t\tvendor_id as integer,\n\t\tpickup_datetime as timestamp,\n\t\tdropoff_datetime as timestamp,\n\t\tstore_and_fwd_flag as string,\n\t\trate_code_id as integer,\n\t\tpickup_location_id as integer,\n\t\tdropoff_location_id as integer,\n\t\tpickup_longitude as string,\n\t\tpickup_latitude as string,\n\t\tdropoff_longitude as string,\n\t\tdropoff_latitude as string,\n\t\tpassenger_count as integer,\n\t\ttrip_distance as double,\n\t\tfare_amount as double,\n\t\textra as double,\n\t\tmta_tax as double,\n\t\ttip_amount as double,\n\t\ttolls_amount as double,\n\t\tehail_fee as double,\n\t\timprovement_surcharge as double,\n\t\ttotal_amount as double,\n\t\tpayment_type as integer,\n\t\ttrip_type as integer,\n\t\tvendor_abbreviation as string,\n\t\tvendor_description as string,\n\t\ttrip_type_description as string,\n\t\tmonth_name_short as string,\n\t\tmonth_name_full as string,\n\t\tpayment_type_description as string,\n\t\trate_code_description as string,\n\t\tpickup_borough as string,\n\t\tpickup_zone as string,\n\t\tpickup_service_zone as string,\n\t\tdropoff_borough as string,\n\t\tdropoff_zone as string,\n\t\tdropoff_service_zone as string,\n\t\tpickup_year as integer,\n\t\tpickup_month as integer,\n\t\tpickup_day as integer,\n\t\tpickup_hour as integer,\n\t\tpickup_minute as integer,\n\t\tpickup_second as integer,\n\t\tdropoff_year as integer,\n\t\tdropoff_month as integer,\n\t\tdropoff_day as integer,\n\t\tdropoff_hour as integer,\n\t\tdropoff_minute as integer,\n\t\tdropoff_second as integer,\n\t\ttrip_year as string,\n\t\ttrip_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('key',\n\t\t0,\n\t\ttaxi_type,\n\t\ttrip_year,\n\t\ttrip_month\n\t)) ~> SinkToConsumption"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/3_nyccuratedyellowtaxi')]",
                "[concat(variables('factoryId'), '/datasets/3_nyccuratedgreentaxi')]",
                "[concat(variables('factoryId'), '/datasets/3_nycconsumption')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/3_nyccuratedgreentaxi')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "3_CuratedToConsumption"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-curated-df/transactions/green-taxi",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/3_nyccuratedyellowtaxi')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "3_CuratedToConsumption"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-curated-df/transactions/yellow-taxi",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/3_nycconsumption')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyctaxiadlsls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "3_CuratedToConsumption"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "nyctaxi-consumption-df/transactions/materialized-view",
                        "fileSystem": "nyctaxi"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "taxi_type",
                        "type": "UTF8"
                    },
                    {
                        "name": "vendor_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "dropoff_datetime",
                        "type": "INT96"
                    },
                    {
                        "name": "store_and_fwd_flag",
                        "type": "UTF8"
                    },
                    {
                        "name": "rate_code_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_location_id",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_location_id",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_longitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_latitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_longitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_latitude",
                        "type": "UTF8"
                    },
                    {
                        "name": "passenger_count",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_distance",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "fare_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "extra",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "mta_tax",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tip_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tolls_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "ehail_fee",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "improvement_surcharge",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "total_amount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "payment_type",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_type",
                        "type": "INT32"
                    },
                    {
                        "name": "vendor_abbreviation",
                        "type": "UTF8"
                    },
                    {
                        "name": "vendor_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "trip_type_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "month_name_short",
                        "type": "UTF8"
                    },
                    {
                        "name": "month_name_full",
                        "type": "UTF8"
                    },
                    {
                        "name": "payment_type_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "rate_code_description",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_borough",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_service_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_borough",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "dropoff_service_zone",
                        "type": "UTF8"
                    },
                    {
                        "name": "pickup_year",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_month",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_day",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_hour",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_minute",
                        "type": "INT32"
                    },
                    {
                        "name": "pickup_second",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_year",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_month",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_day",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_hour",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_minute",
                        "type": "INT32"
                    },
                    {
                        "name": "dropoff_second",
                        "type": "INT32"
                    },
                    {
                        "name": "trip_year",
                        "type": "UTF8"
                    },
                    {
                        "name": "trip_month",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadlsls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/3_CuratedToConsumption')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "3_CuratedToConsumptiondf",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "Cleanup Directories",
                                "dependencyConditions": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "3_nyccuratedtoconsumptiondf",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "YellowTaxi": {},
                                    "GreenTaxi": {},
                                    "SinkToConsumption": {}
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "[parameters('msdaieteir')]",
                                "type": "IntegrationRuntimeReference"
                            }
                        }
                    },
                    {
                        "name": "Cleanup Directories",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "3_nycconsumption",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "Delete committed Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete success files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "3_nycconsumption",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_committed*"
                            }
                        }
                    },
                    {
                        "name": "Delete started Files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "3_CuratedToConsumptiondf",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "3_nycconsumption",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_started*"
                            }
                        }
                    },
                    {
                        "name": "Delete success files",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Delete started Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "3_nycconsumption",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "wildcardFileName": "_SUCCESS*"
                            }
                        }
                    },
                    {
                        "name": "Execute 1_MaterializedView",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Delete committed Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Shared/msdaie2e/adf/3_Consumption/1_MaterializedView"
                        },
                        "linkedServiceName": {
                            "referenceName": "nyctaxiadb",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "3_CuratedToConsumption"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/3_nyccuratedtoconsumptiondf')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/', parameters('msdaieteir'))]",
                "[concat(variables('factoryId'), '/datasets/3_nycconsumption')]",
                "[concat(variables('factoryId'), '/linkedServices/nyctaxiadb')]"
            ]
        }
    ]
}