{
	"name": "0_CETAS To Write the Source Data",
	"properties": {
		"folder": {
			"name": "WorldWideImporters/Logical Data Warehouse/Part 2"
		},
		"content": {
			"query": "USE LogicalDw\nGO\n\n--Weâ€™ll now use CETAS to write the source data to a destination folder. Please note the following:\n\n--The load will write the data out to a sub-folder \\01\\ in each dimension (except the Date dimension) as this is the initial load. Future loads will populate a sequence of sub-folders.\n--We use ROW_NUMBER() to generate a surrogate key on type Integer.\n--A ValidFromDate of 2013-01-01 is used as this is the start of our Sales data.\n--Data quality checking such as NULL attributes are currently not being dealt with in this solution for the sake of code brevity.\n\nCREATE SCHEMA STG AUTHORIZATION dbo;\n\nCREATE EXTERNAL DATA SOURCE ExternalCuratedDataLake\nWITH (\n    LOCATION   = 'https://azcurateddatalakeash.dfs.core.windows.net/wwi'\n);\n\n\nCREATE EXTERNAL FILE FORMAT SynapseParquetFormat\nWITH (\n    FORMAT_TYPE = PARQUET\n);\n\n\n--Customer\nCREATE EXTERNAL TABLE STG.DimCustomer\nWITH\n    (\n        LOCATION = 'conformed/dimensions/dimcustomer/01',\n        DATA_SOURCE = ExternalCuratedDataLake,\n        FILE_FORMAT = SynapseParquetFormat\n    )\nAS\nSELECT CAST(ROW_NUMBER() OVER(ORDER BY C.CustomerID) AS INT) AS CustomerKey,\n    CAST(C.CustomerID AS INT) AS CustomerID,\n    C.CustomerName,\n    CC.CustomerCategoryName,\n    BG.BuyingGroupName,\n    DM.DeliveryMethodName,\n    DC.CityName AS DeliveryCityName,\n    DSP.StateProvinceName AS DeliveryStateProvinceName,\n    DSP.SalesTerritory AS DeliverySalesTerritory,\n    DCO.Country AS DeliveryCountry,\n    DCO.Continent AS DeliveryContinent,\n    DCO.Region AS DeliveryRegion,\n    DCO.Subregion AS DeliverySubregion,\n    CAST('2013-01-01' AS DATE) AS ValidFromDate\nFROM LDW.vwCustomers C\nLEFT JOIN LDW.vwCustomerCategories CC On CC.CustomerCategoryID = C.CustomerCategoryID\nLEFT JOIN LDW.vwCities DC ON DC.CityID = C.DeliveryCityID\nLEFT JOIN LDW.vwStateProvinces DSP ON DSP.StateProvinceID = DC.StateProvinceID\nLEFT JOIN LDW.vwCountries DCO ON DCO.CountryID = DSP.CountryID\nLEFT JOIN LDW.vwBuyingGroups BG ON BG.BuyingGroupID = C.BuyingGroupID\nLEFT JOIN LDW.vwDeliveryMethods DM ON DM.DeliveryMethodID = C.DeliveryMethodID\nORDER BY C.CustomerID\n\n--StockItem\nCREATE EXTERNAL TABLE STG.DimStockItem\nWITH\n    (\n        LOCATION = 'conformed/dimensions/dimstockitem/01',\n        DATA_SOURCE = ExternalCuratedDataLake,\n        FILE_FORMAT = SynapseParquetFormat\n    )\nAS\nSELECT CAST(ROW_NUMBER() OVER(ORDER BY SI.StockItemID) AS SMALLINT) AS StockItemKey,\n    CAST(SI.StockItemID AS SMALLINT) AS StockItemID,\n    SI.StockItemName,\n    SI.LeadTimeDays,\n    C.ColorName,\n    OP.PackageTypeName AS OuterPackageTypeName,\n    CAST('2013-01-01' AS DATE) AS ValidFromDate\nFROM LDW.vwStockItems SI\nLEFT JOIN LDW.vwColors C ON C.ColorID = SI.ColorID\nLEFT JOIN LDW.vwPackageTypes OP ON OP.PackageTypeID = SI.OuterPackageID\nORDER BY SI.StockItemID\n\n--Supplier\nCREATE EXTERNAL TABLE STG.DimSupplier\nWITH\n    (\n        LOCATION = 'conformed/dimensions/dimsupplier/01',\n        DATA_SOURCE = ExternalCuratedDataLake,\n        FILE_FORMAT = SynapseParquetFormat\n    )\nAS\nSELECT CAST(ROW_NUMBER() OVER(ORDER BY S.SupplierID) AS TINYINT) AS SupplierKey,\n    CAST(S.SupplierID AS TINYINT) AS SupplierID,\n    S.SupplierName,\n    SC.SupplierCategoryName,\n    CAST('2013-01-01' AS DATE) AS ValidFromDate\nFROM LDW.vwSuppliers S\nLEFT JOIN LDW.vwSupplierCategories SC ON SC.SupplierCategoryID = S.SupplierCategoryID\nORDER BY S.SupplierID;\n\n--- TBD ----\n--Date\nCREATE EXTERNAL TABLE STG.DimDate\nWITH\n    (\n        LOCATION = 'conformed/dimensions/dimdate',\n        DATA_SOURCE = ExternalCuratedDataLake,\n        FILE_FORMAT = SynapseParquetFormat\n    )\nAS\nSELECT CAST(DateKey AS INT) AS DateKey,\n    CAST(Date AS DATE) AS Date,\n    CAST(Day AS TINYINT) AS Day,\n    CAST(WeekDay AS TINYINT) AS WeekDay,\n    WeekDayName,\n    CAST(Month AS TINYINT) AS Month,\n    MonthName,\n    CAST(Quarter AS TINYINT) AS Quarter,\n    CAST(Year AS SMALLINT) AS Year\nFROM\nOPENROWSET\n(\n    BULK 'datedim/*.csv',\n    DATA_SOURCE = 'ExternalRawDataLake',\n    FORMAT = 'CSV',\n    PARSER_VERSION = '2.0',\n    HEADER_ROW = TRUE,\n    FIELDTERMINATOR ='|'\n) AS fct",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "logicaldw",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}